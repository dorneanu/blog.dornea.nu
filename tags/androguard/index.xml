<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>androguard on blog.dornea.nu</title>
    <link>http://blog.dornea.nu/tags/androguard/</link>
    <description>Recent content in androguard on blog.dornea.nu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Sep 2014 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/androguard/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HowTo: Androguard with Docker</title>
      <link>http://blog.dornea.nu/2014/09/12/howto-androguard-with-docker/</link>
      <pubDate>Fri, 12 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/09/12/howto-androguard-with-docker/</guid>
      <description>Meanwhile I think I&amp;rsquo;ve felt in love with Androguard. I love its Pythonic way handling things and its visualizations features. As many of you have noticed, you can run Androguard inside a Docker container. I&amp;rsquo;ve never used Docker before so it was about time. You can find some general information about the installation process on Arch Linux at this address.
Extensions # Install extensions # &amp;lt;!-- collapse=True --&amp;gt; %install_ext https://raw.githubusercontent.com/dorneanu/ipython/master/extensions/diagmagic.py # Then load extensions %load_ext diagmagic Installed diagmagic.</description>
    </item>
    
    <item>
      <title>Disect Android APKs like a Pro - Static code analysis</title>
      <link>http://blog.dornea.nu/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis/</link>
      <pubDate>Mon, 07 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis/</guid>
      <description>I&amp;rsquo;ve started writing this IPython notebook in order to make myself more comfortable with Android and its SDK. Due to some personal interests I thought I could also have a look at the available RE tools and learn more about their pros &amp;amp; cos. In particular I had a closer look at AndroGuard which seems to be good at:
 Reverse engineering, Malware and goodware analysis of Android applications &amp;hellip; and more (ninja !</description>
    </item>
    
  </channel>
</rss>

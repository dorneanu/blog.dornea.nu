<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on blog.dornea.nu</title>
    <link>http://blog.dornea.nu/tags/javascript/</link>
    <description>Recent content in javascript on blog.dornea.nu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ringzer0 CTF - JavaScript challenges </title>
      <link>http://blog.dornea.nu/2016/10/29/ringzer0-ctf-javascript-challenges/</link>
      <pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/10/29/ringzer0-ctf-javascript-challenges/</guid>
      <description>These challenges were quite tricky since they didn&amp;rsquo;t focus only on the JavaScript language itself but also on all kind of stuff you can do with JavaScript: Crypto, obfuscation etc. I think they were a good opportunity to learn more about the language itself and get some ideas how JavaScript obfuscation techniques work.
Level 1: Client side validation is bad! Let&amp;rsquo;s have a look at the source code:
// Look&amp;#39;s like weak JavaScript auth script :) $(&amp;#34;.</description>
    </item>
    
    <item>
      <title>Some words on CSRF and cookies</title>
      <link>http://blog.dornea.nu/2016/01/26/some-words-on-csrf-and-cookies/</link>
      <pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/01/26/some-words-on-csrf-and-cookies/</guid>
      <description>Being involved in different projects where web technologies are used, I have to make sure that AppSec related security nightmares are avoided. One of those security nightmare - and in my own oppinion the most complicated one to explain to a non-sec person - is CSRF. I won&amp;rsquo;t go into details since these are freely available. Furthermore I would like to focus on the countermeasures one would implement to prevent CSRF.</description>
    </item>
    
    <item>
      <title>Using JQuery DataTables with IPython</title>
      <link>http://blog.dornea.nu/2014/08/28/using-jquery-datatables-with-ipython/</link>
      <pubDate>Thu, 28 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/08/28/using-jquery-datatables-with-ipython/</guid>
      <description>I thought this might be interesting enough to share with you. Every time I&amp;rsquo;m working with DataFrames I somehow miss the search feature: I&amp;rsquo;d like to search for certain patterns inside the columns and rows. I used to use JQuery DataTables for netgrafio. But I couldn&amp;rsquo;t find any simple way to integrate it with IPython. Well it was easier than I thought.
Extensions # &amp;lt;!-- collapse=True --&amp;gt; from IPython import display from IPython.</description>
    </item>
    
    <item>
      <title>Googles XSS Game - Solutions</title>
      <link>http://blog.dornea.nu/2014/06/02/googles-xss-game-solutions/</link>
      <pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/06/02/googles-xss-game-solutions/</guid>
      <description>&lt;p&gt;These are my steps how I&amp;rsquo;ve solved the &lt;a href=&#34;https://xss-game.appspot.com/&#34;&gt;XSS Game&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-1&#34;&gt;Level 1&lt;/h2&gt;
&lt;p&gt;This is the most obvious and easiest one. Just insert following code and you&amp;rsquo;re done:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&amp;lt;script&amp;gt;alert(&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;)&amp;lt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;level-2&#34;&gt;Level 2&lt;/h2&gt;
&lt;p&gt;Since the &lt;code&gt;script&lt;/code&gt; won&amp;rsquo;t work you&amp;rsquo;ll have to think of another tags to trigger JavaScript code execution. The first thing which came in mind was to use &lt;code&gt;img&lt;/code&gt; tags along with the &lt;code&gt;onerror&lt;/code&gt; attributes. Here you go:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&amp;lt;img src=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;http://inexist.ent&amp;#34;&lt;/span&gt; onerror=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;javascript:alert(1)&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>

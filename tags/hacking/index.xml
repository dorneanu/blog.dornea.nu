<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hacking on blog.dornea.nu</title><link>http://blog.dornea.nu/tags/hacking/</link><description>Recent content in hacking on blog.dornea.nu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 28 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/hacking/index.xml" rel="self" type="application/rss+xml"/><item><title>Fuzzing the hell out of conntrack tools</title><link>http://blog.dornea.nu/2016/10/28/fuzzing-the-hell-out-of-conntrack-tools/</link><pubDate>Fri, 28 Oct 2016 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2016/10/28/fuzzing-the-hell-out-of-conntrack-tools/</guid><description>Fuzzing is nowadays the attack technique used by a lot of pentesters and security researchers. Whether you&amp;rsquo;re looking for vulnerabilities in media files (pictures, videos, audio stuff) or just binary files, fuzzing is the right approach if you don&amp;rsquo;t want to do some static code analysis or debug the hell out of your targets.
When it comes to fuzzing there are a few tools to mention that have established during the last years.</description></item><item><title>hack.lu conference 2016</title><link>http://blog.dornea.nu/2016/10/21/hack.lu-conference-2016/</link><pubDate>Fri, 21 Oct 2016 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2016/10/21/hack.lu-conference-2016/</guid><description>This year I&amp;rsquo;ve attended the hack.lu conference in Luxembourg. Being actually for the first time there, I&amp;rsquo;ve had absolutely no expectations. In fact it was a really lovelly and warm athmosphere during the whole conference and I&amp;rsquo;ve met a lot of interesting persons.
Talks I think there were some realy good talks. Unfortunately I&amp;rsquo;ve seen only 1 because most of the time I was at the workshops practicing my reverse engineering skills.</description></item><item><title>Debugging Android native shared libraries</title><link>http://blog.dornea.nu/2015/07/01/debugging-android-native-shared-libraries/</link><pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2015/07/01/debugging-android-native-shared-libraries/</guid><description>Since I haven&amp;rsquo;t done this before, I thought I could share some experiences with you. All this began during some APK analysis which was heavily using JNIs. In my particular case Java Native Interfaces were used to call functions inside libraries written in C/C++. At that time I was quite unfamiliar with JNIs and how they actually work. Besides that I haven&amp;rsquo;t debugged any native applications/libraries on Android before. So this was the perfect opportunity to have a closer look at Android NDK and its debugging features.</description></item><item><title>usd AG Hacker challenge 2015 - Solutions</title><link>http://blog.dornea.nu/2015/03/18/usd-ag-hacker-challenge-2015-solutions/</link><pubDate>Wed, 18 Mar 2015 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2015/03/18/usd-ag-hacker-challenge-2015-solutions/</guid><description>usd AG has announced a hacking challenge I have participated at. The target system was available at http://82.195.79.41/. Now let me sum up thg steps that have been required in order to get all 6 tokens.
# &amp;lt;!-- collapse=True --&amp;gt; import pandas as pd import sqlite3 import binascii Scratch the surface Let&amp;rsquo;s first conduct a nmap scan to see which ports are open.
%%bash nmap -A -T4 82.195.79.41 Starting Nmap 6.</description></item><item><title>2014 - Personal review</title><link>http://blog.dornea.nu/2014/12/22/2014-personal-review/</link><pubDate>Mon, 22 Dec 2014 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2014/12/22/2014-personal-review/</guid><description>Well, where should I start? Looking back at my blog archives I&amp;rsquo;ve realized 2014 &amp;ldquo;year of the mobile apps&amp;rdquo; - at least for me. I was heavily involved in analyzing mobile applications: Android and iOS. For the first time in my whole infosec career path I was disassembling iOS applications and doing stuff (binary analysis) I was used to (some years ago). Besides doing a lot of mobile apps analysis, I was pretty much involved in structuring and hacking data.</description></item><item><title>Generate all IP addresses from ASN</title><link>http://blog.dornea.nu/2014/09/17/generate-all-ip-addresses-from-asn/</link><pubDate>Wed, 17 Sep 2014 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2014/09/17/generate-all-ip-addresses-from-asn/</guid><description>Sometimes you need to know if a certain IP (or several ones) are within an IP range or belong to a certain ASN. Let&amp;rsquo;s give it a try and generate all possible IP addresses for telekom.de.
$ dig telekom.de ... telekom.de. 86346 IN A 46.29.100.76 ... Now let&amp;rsquo;s find out the ASN:
$ whois 46.29.100.76 | grep origin origin: AS34086 Now ask RIPE for the IP ranges:
$ whois -h whois.</description></item><item><title>Android Dynamic Code Analysis - Mastering DroidBox</title><link>http://blog.dornea.nu/2014/08/05/android-dynamic-code-analysis-mastering-droidbox/</link><pubDate>Tue, 05 Aug 2014 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2014/08/05/android-dynamic-code-analysis-mastering-droidbox/</guid><description>In this article I&amp;rsquo;ll have a a closer look at DroidBox which provides a mobile sandbox to look at Android applications. In the previous post I&amp;rsquo;ve dealt with static code analysis. This time will start running our malicious application and look at the &amp;ldquo;noise&amp;rdquo; it generates. That would be:
file system access network activity interaction with the operating system interaction with other applications etc. DroidBox is very easy to use and consists of an own system image and kernel meant to log one applications activities.</description></item><item><title>Disect Android APKs like a Pro - Static code analysis</title><link>http://blog.dornea.nu/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis/</link><pubDate>Mon, 07 Jul 2014 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis/</guid><description>I&amp;rsquo;ve started writing this IPython notebook in order to make myself more comfortable with Android and its SDK. Due to some personal interests I thought I could also have a look at the available RE tools and learn more about their pros &amp;amp; cos. In particular I had a closer look at AndroGuard which seems to be good at:
Reverse engineering, Malware and goodware analysis of Android applications &amp;hellip; and more (ninja !</description></item><item><title>Googles XSS Game - Solutions</title><link>http://blog.dornea.nu/2014/06/02/googles-xss-game-solutions/</link><pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2014/06/02/googles-xss-game-solutions/</guid><description>&lt;p>These are my steps how I&amp;rsquo;ve solved the &lt;a href="https://xss-game.appspot.com/">XSS Game&lt;/a>&lt;/p>
&lt;h2 id="level-1">Level 1&lt;/h2>
&lt;p>This is the most obvious and easiest one. Just insert following code and you&amp;rsquo;re done:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&amp;lt;script&amp;gt;alert(&lt;span style="color:#3677a9">1&lt;/span>)&amp;lt;&lt;span style="color:#a61717;background-color:#e3d2d2">/script&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="level-2">Level 2&lt;/h2>
&lt;p>Since the &lt;code>script&lt;/code> won&amp;rsquo;t work you&amp;rsquo;ll have to think of another tags to trigger JavaScript code execution. The first thing which came in mind was to use &lt;code>img&lt;/code> tags along with the &lt;code>onerror&lt;/code> attributes. Here you go:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&amp;lt;img src=&lt;span style="color:#ed9d13">&amp;#34;http://inexist.ent&amp;#34;&lt;/span> onerror=&lt;span style="color:#ed9d13">&amp;#34;javascript:alert(1)&amp;#34;&lt;/span>/&amp;gt;
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>BerlinSides 0x05</title><link>http://blog.dornea.nu/2014/05/27/berlinsides-0x05/</link><pubDate>Tue, 27 May 2014 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2014/05/27/berlinsides-0x05/</guid><description>The BerlinSides is a conference from hacker for hacker. This years motto was: &amp;hellip;you ain&amp;rsquo;t listening. All my greetings go to:
nullsecurity.net Aluc Universal Hall Team</description></item><item><title>24h Android sniffing using tcpdump</title><link>http://blog.dornea.nu/2014/01/23/24h-android-sniffing-using-tcpdump/</link><pubDate>Thu, 23 Jan 2014 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2014/01/23/24h-android-sniffing-using-tcpdump/</guid><description>Motivation I&amp;rsquo;ve started this little project since I was mainly interested in the data my smartphone isÂ ending all the time without my knowledge. I have a bunch of apps installed on my phone and I have absolutely no ideea which (kind of) data is beeing transfered to the Internet all day long. I thought I&amp;rsquo;d be a great ideea to monitor/sniff my data interface (3G, Edge etc. NOT Wifi) for 24h during my normal daily phone usage.</description></item><item><title>24h Android sniffing using tcpdump - IPython Notebook Version</title><link>http://blog.dornea.nu/2014/01/23/24h-android-sniffing-using-tcpdump-ipython-notebook-version/</link><pubDate>Thu, 23 Jan 2014 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2014/01/23/24h-android-sniffing-using-tcpdump-ipython-notebook-version/</guid><description>Motivation I&amp;rsquo;ve started this little project since I was mainly interested in the data my smartphone is sending all the time without my knowledge. I have a bunch of apps installed on my phone and I have absolutely no ideea which (kind of) data is beeing transfered to the Internet all day long. I thought I&amp;rsquo;d be a great ideea to monitor/sniff my data interface (3G, Edge etc. NOT Wifi) for 24h during my normal daily phone usage.</description></item><item><title>HowTo: Automate nmap scanning</title><link>http://blog.dornea.nu/2013/09/13/howto-automate-nmap-scanning/</link><pubDate>Fri, 13 Sep 2013 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2013/09/13/howto-automate-nmap-scanning/</guid><description>Recently a colleague of mine at nullsecurity.net released a new scanning tool called wnmap. Basically it&amp;rsquo;s a wrapper around nmap which helps automating the scanning process by using simple configuration files. Let&amp;rsquo;s have a look at it..
Configuration Make sure you you have downloaded the archive and open src/core/wnmap.conf in order to edit:
the wnmap path editor preferences global parameters (to use in every scan) Running the tool Now the obligatory -help message:</description></item><item><title>HowTo: Root your Kindle 3</title><link>http://blog.dornea.nu/2013/07/03/howto-root-your-kindle-3/</link><pubDate>Wed, 03 Jul 2013 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2013/07/03/howto-root-your-kindle-3/</guid><description>As I&amp;rsquo;m using my Kindle 3 on daily basis I wanted to go behind the limits and check for some new features. As an entry point to the whole topic I highly recommend you K3_Index. This is what I did:
Step 1: Jailbreak Download the files from http://www.mobileread.com/forums/showthread.php?t=88004. In my case I&amp;rsquo;ve used update_jailbreak_0.11.N_k3w_install.bin. Copy this file to your Kindle, unplug it from the PC and run: [HOME] -&amp;gt; [MENU] &amp;gt; Settings -&amp;gt; [MENU] &amp;gt; Update YourÃÂ Kindle.</description></item><item><title>Hacking Altoro Mutual</title><link>http://blog.dornea.nu/2013/05/06/hacking-altoro-mutual/</link><pubDate>Mon, 06 May 2013 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2013/05/06/hacking-altoro-mutual/</guid><description>Introduction AltoroMutual is an vulnerable-by-design web application created by WatchFire (nowÂ AppScan Standard) as a demo test application for their BlackBox Scanner. (Source:https://www.owasp.org/index.php/AltoroMutual)
The demo can be found atÂ http://demo.testfire.net/.
Vulnerabilities /default.aspx?content= There is a file inclusion vulnerability which we&amp;rsquo;ll use for further investigation. URLÂ http://demo.testfire.net/default.aspx?content=../testing.txtÂ will show:
An Error Has Occurred Summary: Could not find file &amp;#39;D:downloadsAltoroMutual_v6website esting.txt&amp;#39;. Error Message: System.IO.FileNotFoundException: Could not find file &amp;#39;D:downloadsAltoroMutual_v6website esting.txt&amp;#39;. File name: &amp;#39;D:downloadsAltoroMutual_v6website esting.</description></item><item><title>CCC / 29C3</title><link>http://blog.dornea.nu/2012/12/30/ccc-/-29c3/</link><pubDate>Sun, 30 Dec 2012 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2012/12/30/ccc-/-29c3/</guid><description>Description &amp;ldquo;The 29th Chaos Communication Congress (29C3) is an annual four-day conference on technology, society and utopia. The Congress offers lectures and workshops on a multitude of topics including (but not limited to) information technology and generally a critical-creative attitude towards technology and the discussion about the effects of technological advances on society.
For 29 years, the congress has been organized by the community and appreciates all kinds of participation.</description></item><item><title>Thank God there is iodine! IPv4 over DNS</title><link>http://blog.dornea.nu/2011/11/09/thank-god-there-is-iodine-ipv4-over-dns/</link><pubDate>Wed, 09 Nov 2011 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2011/11/09/thank-god-there-is-iodine-ipv4-over-dns/</guid><description>I always knew DNS/ICMP traffic is mostly allowed and un-monitored. It was about time to setup some DNS server on my vServer which would allow me to break free! Thanks God there is iodine which allows you to route IP traffic over DNS.
I was recently at some cafe and thought it would be a great ideea to test my configuration. I&amp;rsquo;ve setup the iodine server a few weeks before.This is what I did:</description></item><item><title>HowTo: SNAT/IP Masquerade between 2 wlan cards on Linux</title><link>http://blog.dornea.nu/2010/11/25/howto-snat/ip-masquerade-between-2-wlan-cards-on-linux/</link><pubDate>Thu, 25 Nov 2010 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2010/11/25/howto-snat/ip-masquerade-between-2-wlan-cards-on-linux/</guid><description>Although this is a quite minimalistic howto you should be able to do IP masquerading between your WLAN cards in less than 2 minutes. As I posted here I&amp;rsquo;d like to share use my WLAN cards to share one cards Internet connection with the other one. The following steps don&amp;rsquo;t apply only to wifi cards. The same commands should work on Ethernet cards too. Let&amp;rsquo;s start&amp;hellip;
The Big picture As you see you have 2 networks:</description></item><item><title>Inside the mind of a Russian hacker</title><link>http://blog.dornea.nu/2010/03/11/inside-the-mind-of-a-russian-hacker/</link><pubDate>Thu, 11 Mar 2010 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2010/03/11/inside-the-mind-of-a-russian-hacker/</guid><description>&amp;ldquo;It&amp;rsquo;s like when you have a maths problemÂ he said. You&amp;rsquo;ll have to find the right tools otherwise you&amp;rsquo;re lost. If you&amp;rsquo;re able to understand the problem, then `use that knowledge in the future.&amp;rdquo;
This simple comparison applies to hacking, at least to that one that is used to be practiced in Russia. Even Mr. Kaspersky admits that most sophisticated attacks have their origin in his own country. Russian hacking attacks seem to be more professional, the malware design more complicated and technical.</description></item><item><title>Attacking Trusted Platform Module (TPM)</title><link>http://blog.dornea.nu/2009/12/05/attacking-trusted-platform-module-tpm/</link><pubDate>Sat, 05 Dec 2009 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2009/12/05/attacking-trusted-platform-module-tpm/</guid><description>For those of who believe that using authenticated boot features such as TPM should protect you against hackers&amp;hellip; : WRONG! In their latest project some guys from Frauenhofer SIT (Security Test Lab) have managed to conduct a quite realistic attack against a Windows machine with BitLocker, the disk encryption functionality in most recent Windows versions. As stated here there is a video which demonstrates a proof-of-concept implementation of such an attack.</description></item><item><title>HowTo: SSH-Tunnel over CorkScrew using Tor</title><link>http://blog.dornea.nu/2009/08/05/howto-ssh-tunnel-over-corkscrew-using-tor/</link><pubDate>Wed, 05 Aug 2009 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2009/08/05/howto-ssh-tunnel-over-corkscrew-using-tor/</guid><description>Nowadays it seems like we&amp;rsquo;re loosing our privacy and are being taped by video cameras all over. The same applies to Internet surveillance: By daily traffic analysis you can find out who is talking to whom over a public network. This traffic allows others to track your click behaviour and interests. So if any mailicious guy has access to your network traffic (@work, @home â¦) he will try to find more information about you, like e.</description></item></channel></rss>
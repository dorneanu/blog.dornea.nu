<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cryptography on blog.dornea.nu</title>
    <link>http://blog.dornea.nu/tags/cryptography/</link>
    <description>Recent content in cryptography on blog.dornea.nu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jul 2014 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/cryptography/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>On Java, OpenSSL, Crypto, Blowfish and stuff</title>
      <link>http://blog.dornea.nu/2014/07/01/on-java-openssl-crypto-blowfish-and-stuff/</link>
      <pubDate>Tue, 01 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/07/01/on-java-openssl-crypto-blowfish-and-stuff/</guid>
      <description>During some Android malware analysis I came along some Java routines which were meant to decrypt/encrypt some content. Nothing special about it. The key had to be extracted from a file and the encrypted file was in Base64. After unsuccessfully trying openssl in order to decrypt the file I decided to make some further investigations.
In this article I&amp;rsquo;ll have a look how Python, Java and openssl (command line utility) implement Blowfish in CBC mode.</description>
    </item>
    
  </channel>
</rss>

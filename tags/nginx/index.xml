<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nginx on blog.dornea.nu</title>
    <link>http://blog.dornea.nu/tags/nginx/</link>
    <description>Recent content in nginx on blog.dornea.nu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Feb 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TLS Client authentication using Bitnami Nginx stack</title>
      <link>http://blog.dornea.nu/2016/02/18/tls-client-authentication-using-bitnami-nginx-stack/</link>
      <pubDate>Thu, 18 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/02/18/tls-client-authentication-using-bitnami-nginx-stack/</guid>
      <description>I&amp;rsquo;ve felt that I have to write it down since it took almost 2 days to find the root cause of:
[info] 30979#0: *2 client SSL certificate verify error: (18:self signed certificate) while reading client request headers, client: xxx, server: yyy, request: &amp;#34;GET / HTTP/1.1&amp;#34;, host: &amp;#34;yyy&amp;#34; Use nginx stack environment Not generating the certificates inside the Bitnami environment was the root cause - at least I think it is. In your Bitnami installation folder (remember the instructions here) you&amp;rsquo;ll find a small script called use_nginxstack:</description>
    </item>
    
    <item>
      <title>Chrooting nginx, php-fpm and mysql using Bitnami </title>
      <link>http://blog.dornea.nu/2016/02/12/chrooting-nginx-php-fpm-and-mysql-using-bitnami/</link>
      <pubDate>Fri, 12 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/02/12/chrooting-nginx-php-fpm-and-mysql-using-bitnami/</guid>
      <description>Having talked about hardening your server using chroot in a previous post I&amp;rsquo;ve felt that the whole process was way to complicated. I wanted to have a more generic solution regardless of the operating system (and especially the Linux distro). Besides that I wasn&amp;rsquo;t quite happy changing the systems systemd settings and do several modifications to the already running system. What I wanted to achieve was a closed, portable system of running applications inside a chroot environment.</description>
    </item>
    
    <item>
      <title>HowTo: Put nginx and PHP to jail in Debian 8</title>
      <link>http://blog.dornea.nu/2016/01/15/howto-put-nginx-and-php-to-jail-in-debian-8/</link>
      <pubDate>Fri, 15 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/01/15/howto-put-nginx-and-php-to-jail-in-debian-8/</guid>
      <description>Although I thought this would be an easy task, it turned out that chrooting daemons takes more than copying config files and libraries. There are donzens of tutorials out there how to do it, but the devil lies in detail - as always. Setting up a chroot environment is easy. But securing it properly is prone to faults which in worst case could let an attacker escape the chroot. And this is your worst nightmare, right?</description>
    </item>
    
    <item>
      <title>Links of the Week #9</title>
      <link>http://blog.dornea.nu/2013/08/09/links-of-the-week-#9/</link>
      <pubDate>Fri, 09 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/08/09/links-of-the-week-#9/</guid>
      <description>&lt;p&gt;This weeks links&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://spritesmods.com/?art=hddhack&amp;amp;page=1&#34;&gt;Hard disk hacking:&lt;/a&gt; Learn interesting stuff about hard disks&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://securitywatch.pcmag.com/mobile-security/314386-russia-s-massive-android-malware-industry-revealed&#34;&gt;Russia’s Massive Malware Industry Revealed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.zdnet.com/bgp-spoofing-routing-router-phishing-why-nothing-on-the-internet-is-actually-secure-7000019015/&#34;&gt;BGP spoofing – why nothing on the internet is actually secure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jaclynkonzelmann.tumblr.com/post/29070457063/why-i-quit-microsoft-to-join-a-5-person-start-up-in&#34;&gt;JACLYN KONZELMANN, Why I Quit Microsoft To Join A 5 Person Start Up In Toronto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.oddly-even.com/2013/07/31/the-largest-photo-ever-taken-of-tokyo-is-zoomable-and-it-is-glorious/&#34;&gt;The largest photo ever taken of Tokyo is zoomable, and it is glorious&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html&#34;&gt;Configuring Apache, Nginx, and OpenSSL for Forward Secrecy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.reddit.com/r/netsec/comments/1ju6zh/php_exif_backdoors_generator_using_custom/&#34;&gt;HP EXIF Backdoors generator using custom shellcode&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Links of the week #7</title>
      <link>http://blog.dornea.nu/2013/07/12/links-of-the-week-#7/</link>
      <pubDate>Fri, 12 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/07/12/links-of-the-week-#7/</guid>
      <description>Root Cause Analysis Integer Overflows: Nice analysis! Nginx just became the most used web server among the top 1000 websites: Glad to hear that! Hacking Java Bytecode for Programmers (Part4) Krakatau And The Case Of The Integer Overflow: The 4th part is online! This time dealing with integer overflows&amp;hellip; Secure website-authentication using GPG keys: Nice idea but lacks of proper secure implementation. Uncovering Android Master Key That Makes 99% of Devices Vulnerable: Sort of link of the week!</description>
    </item>
    
    <item>
      <title>HowTo: Have a web performance boost with Nginx</title>
      <link>http://blog.dornea.nu/2012/01/26/howto-have-a-web-performance-boost-with-nginx/</link>
      <pubDate>Thu, 26 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2012/01/26/howto-have-a-web-performance-boost-with-nginx/</guid>
      <description>Why Nginx? Since I wanted to improve my sites load speed I thought I should look around for some lighttpd-alternatives which I have used for so many years. The really annoying thing about lighttpd is its configuration syntax. I don&amp;rsquo;t think it&amp;rsquo;s comprehensive nor easy to learn. Besides that I wanted to have a configuration where memcahed plays a major role: Serve static content (html) from memcache. Lighttpd does have some modules/tutorials how to interact with memcached but I couldn&amp;rsquo;t find any working configuration.</description>
    </item>
    
    <item>
      <title>HowTo: Have a web performance boost with Nginx</title>
      <link>http://blog.dornea.nu/2012/01/26/howto-have-a-web-performance-boost-with-nginx/</link>
      <pubDate>Thu, 26 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2012/01/26/howto-have-a-web-performance-boost-with-nginx/</guid>
      <description>Why Nginx? Since I wanted to improve my sites load speed I thought I should look around for some lighttpd-alternatives which I have used for so many years. The really annoying thing about lighttpd is its configuration syntax. I don&amp;rsquo;t think it&amp;rsquo;s comprehensive nor easy to learn. Besides that I wanted to have a configuration where memcahed plays a major role: Serve static content (html) from memcache. Lighttpd does have some modules/tutorials how to interact with memcached but I couldn&amp;rsquo;t find any working configuration.</description>
    </item>
    
  </channel>
</rss>

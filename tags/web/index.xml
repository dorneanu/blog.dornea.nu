<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on blog.dornea.nu</title>
    <link>http://blog.dornea.nu/tags/web/</link>
    <description>Recent content in web on blog.dornea.nu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Jan 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Some words on CSRF and cookies</title>
      <link>http://blog.dornea.nu/2016/01/26/some-words-on-csrf-and-cookies/</link>
      <pubDate>Tue, 26 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/01/26/some-words-on-csrf-and-cookies/</guid>
      <description>Being involved in different projects where web technologies are used, I have to make sure that AppSec related security nightmares are avoided. One of those security nightmare - and in my own oppinion the most complicated one to explain to a non-sec person - is CSRF. I won&amp;rsquo;t go into details since these are freely available. Furthermore I would like to focus on the countermeasures one would implement to prevent CSRF.</description>
    </item>
    
    <item>
      <title>Decode Adobe Flex AMF protocol </title>
      <link>http://blog.dornea.nu/notes/decode-adobe-flex-amf-protocol/</link>
      <pubDate>Mon, 22 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/notes/decode-adobe-flex-amf-protocol/</guid>
      <description>If you ever had the opportunity to pentest Flash applications you might have had problems analyzing the traffic between the client and the backend. An increasing number of (web) applications is using Adobe Flex at the presentation layer which uses the ActionScript Message Format (AMF) to send data back and forth. One might think that Burp has already built-in decoding functionalities for AMF. Although this is the case I found Burp&amp;rsquo;s decoding to be more confusing than useful.</description>
    </item>
    
    <item>
      <title>Python for Data Analysis</title>
      <link>http://blog.dornea.nu/2014/08/06/python-for-data-analysis/</link>
      <pubDate>Wed, 06 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/08/06/python-for-data-analysis/</guid>
      <description>I use Python on daily basis. I love IPython and use it as my main shell for every day tasks. So it was a matter of time until I got captivated by panda, scipy and numpy. I&amp;rsquo;ve ordered myself Python for Data Analysis in order to get more familiar with the mentioned libraries. Before that I used to semi-understand how their work and got used to that copy&amp;amp;paste mentality.
This book is not only about data analysis.</description>
    </item>
    
    <item>
      <title>Web Application Survey Tutorial</title>
      <link>http://blog.dornea.nu/2014/08/06/web-application-survey-tutorial/</link>
      <pubDate>Wed, 06 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/08/06/web-application-survey-tutorial/</guid>
      <description>Suppose you get a list of some URLs and you are asked to &amp;ldquo;investigate&amp;rdquo; them. The list is full of some random URLs related to your company and nobody knows about. You don&amp;rsquo;t have a clue who is responsible for them nor which applications (if any) are running behind them. Sounds like a cool task, ugh?
Well in today&amp;rsquo;s post I&amp;rsquo;ll show you how I&amp;rsquo;ve managed it to minimize the process of analyzing each URL manually and saved me a lot of time automatizing things.</description>
    </item>
    
    <item>
      <title>Googles XSS Game - Solutions</title>
      <link>http://blog.dornea.nu/2014/06/02/googles-xss-game-solutions/</link>
      <pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/06/02/googles-xss-game-solutions/</guid>
      <description>&lt;p&gt;These are my steps how I&amp;rsquo;ve solved the &lt;a href=&#34;https://xss-game.appspot.com/&#34;&gt;XSS Game&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-1&#34;&gt;Level 1&lt;/h2&gt;
&lt;p&gt;This is the most obvious and easiest one. Just insert following code and you&amp;rsquo;re done:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&amp;lt;script&amp;gt;alert(&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;)&amp;lt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;level-2&#34;&gt;Level 2&lt;/h2&gt;
&lt;p&gt;Since the &lt;code&gt;script&lt;/code&gt; won&amp;rsquo;t work you&amp;rsquo;ll have to think of another tags to trigger JavaScript code execution. The first thing which came in mind was to use &lt;code&gt;img&lt;/code&gt; tags along with the &lt;code&gt;onerror&lt;/code&gt; attributes. Here you go:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&amp;lt;img src=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;http://inexist.ent&amp;#34;&lt;/span&gt; onerror=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;javascript:alert(1)&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Unfancy dashboard using matplotlib</title>
      <link>http://blog.dornea.nu/2014/03/07/unfancy-dashboard-using-matplotlib/</link>
      <pubDate>Fri, 07 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/03/07/unfancy-dashboard-using-matplotlib/</guid>
      <description>I was recently playing around with D3Â and discovered its dashboard posibilities.dashboarddude.comÂ has a nice compilation of really fancy dashboards (I was mainly interested in D3 but voila&amp;hellip; there are also other ways to do it).
Meanwhile I was remembered of old good IPython Notebook and its plotting features. This is what came out (You can find the code also on Github Gist: https://gist.github.com/dorneanu/9407737):
import datetime as dt import matplotlib.dates as mdates from mpl_toolkits.</description>
    </item>
    
    <item>
      <title>Links of the Week 8</title>
      <link>http://blog.dornea.nu/2013/08/09/links-of-the-week-8/</link>
      <pubDate>Fri, 09 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/08/09/links-of-the-week-8/</guid>
      <description> Android Bug 82119321: A comprehensive description of the recent Android bug also known as the signature bug FOOAS: Fuck Of As A Service localtunnel: Access your local web server through the internet [A Tour Inside CloudFlare’s Latest Generation Servers}(http://blog.cloudflare.com/a-tour-inside-cloudflares-latest-generation-servers): Really impressive! Here’s What Wi-Fi Would Look Like If We Could See It Why I left OpenBSD: Remember self interview after leaving NetBSD? Function Hooking Part 1 – Hooking shared library function calls in Linux  </description>
    </item>
    
    <item>
      <title>HowTo: Automate Burp using Burp Extender API</title>
      <link>http://blog.dornea.nu/2013/08/02/howto-automate-burp-using-burp-extender-api/</link>
      <pubDate>Fri, 02 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/08/02/howto-automate-burp-using-burp-extender-api/</guid>
      <description>I really love Burp. Since I use it on a daily basis I thought there might be some way to automate it. Usually I mainly do these steps to scan some URL:
 Define scope Start manual exploring OR spider the URL in order to get some target map Activate passive scanning Activate live scanning Wait to the scan to finish Have a look at the results Save/export the results  Well these are a lot of steps which have to be done manually.</description>
    </item>
    
    <item>
      <title>Hacking Altoro Mutual</title>
      <link>http://blog.dornea.nu/2013/05/06/hacking-altoro-mutual/</link>
      <pubDate>Mon, 06 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/05/06/hacking-altoro-mutual/</guid>
      <description>Introduction AltoroMutual is an vulnerable-by-design web application created by WatchFire (now AppScan Standard) as a demo test application for their BlackBox Scanner. (Source:https://www.owasp.org/index.php/AltoroMutual)
The demo can be found at http://demo.testfire.net/.
Vulnerabilities /default.aspx?content= There is a file inclusion vulnerability which we&amp;rsquo;ll use for further investigation. URL http://demo.testfire.net/default.aspx?content=../testing.txt will show:
An Error Has Occurred Summary: Could not find file &amp;#39;D:downloadsAltoroMutual_v6website esting.txt&amp;#39;. Error Message: System.IO.FileNotFoundException: Could not find file &amp;#39;D:downloadsAltoroMutual_v6website esting.txt&amp;#39;. File name: &amp;#39;D:downloadsAltoroMutual_v6website esting.</description>
    </item>
    
    <item>
      <title>HowTo: Redmine, Lighttpd with Debian</title>
      <link>http://blog.dornea.nu/2011/11/07/howto-redmine-lighttpd-with-debian/</link>
      <pubDate>Mon, 07 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/11/07/howto-redmine-lighttpd-with-debian/</guid>
      <description>I&amp;rsquo;ll just post my lighttpd.conf. The rest can be easily found on the Internet.
$HTTP[&amp;#34;host&amp;#34;] =~ &amp;#34;^dev.dornea.nu$&amp;#34; { evhost.path-pattern = &amp;#34;/home/redmine/current/public&amp;#34; server.follow-symlink = &amp;#34;enable&amp;#34; server.indexfiles = ( &amp;#34;dispatch.fcgi&amp;#34; ) server.error-handler-404 = &amp;#34;/dispatch.fcgi&amp;#34; #dir-listing.activate = &amp;#34;enable&amp;#34; url.rewrite-once = ( &amp;#34;^/(.*..+(?!html))$&amp;#34; =&amp;amp;gt; &amp;#34;$0&amp;#34;, &amp;#34;^/(.*).(.*)&amp;#34; =&amp;amp;gt; &amp;#34;$0&amp;#34;, ) fastcgi.server = ( &amp;#34;.fcgi&amp;#34; =&amp;amp;gt; ( &amp;#34;redmine&amp;#34; =&amp;amp;gt; ( &amp;#34;min-procs&amp;#34; =&amp;amp;gt; 1, &amp;#34;max-procs&amp;#34; =&amp;amp;gt; 5, &amp;#34;socket&amp;#34; =&amp;amp;gt; &amp;#34;/tmp/redmine.socket&amp;#34;, &amp;#34;bin-path&amp;#34; =&amp;amp;gt; &amp;#34;/usr/bin/ruby /home/redmine/current/public/dispatch.fcgi&amp;#34;, &amp;#34;bin-environment&amp;#34; =&amp;amp;gt; ( &amp;#34;RAILS_ENV&amp;#34; =&amp;amp;gt; &amp;#34;production&amp;#34; ) ) ) ) } My redmine installation can be found under /home/redmine/current</description>
    </item>
    
    <item>
      <title>Stay clean and anonymous with Google Apps</title>
      <link>http://blog.dornea.nu/2011/02/10/stay-clean-and-anonymous-with-google-apps/</link>
      <pubDate>Thu, 10 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/02/10/stay-clean-and-anonymous-with-google-apps/</guid>
      <description>I was recently reading some documentary article about the Mexican drug war near USA&amp;rsquo;s national border. Actually it was rather an interview with some guy who fights against the (corrupt) authorities and the drugs leaders by running some informative blog. Feel free to activate your investigative mind and find out which blog I&amp;rsquo;m talking about&amp;hellip;
So this guy was clever enough to hide its identity - what would you do in his case ?</description>
    </item>
    
    <item>
      <title>Drupals clean urls using Lighttpd: Moved from Lua to rewrite-once</title>
      <link>http://blog.dornea.nu/2010/09/07/drupals-clean-urls-using-lighttpd-moved-from-lua-to-rewrite-once/</link>
      <pubDate>Tue, 07 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/09/07/drupals-clean-urls-using-lighttpd-moved-from-lua-to-rewrite-once/</guid>
      <description>I&amp;rsquo;ve been using Lighttpd + Drupal for a long time. In order to have those sexy clean urls, you&amp;rsquo;ll have to do some rewrite stuff. A few months ago I found this Lua script, which served its purpose without any complications.
-- little helper function function file_exists(path) local attr = lighty.stat(path) if (attr) then return true else return false end end function removePrefix(str, prefix) return str:sub(1,#prefix+1) == prefix..&amp;#34;/&amp;#34; and str:sub(#prefix+2) end -- prefix without the trailing slash local prefix = &amp;#39;&amp;#39; -- the magic if (not file_exists(lighty.</description>
    </item>
    
    <item>
      <title>Speed up Drupal by preloading the page cache</title>
      <link>http://blog.dornea.nu/2010/09/04/speed-up-drupal-by-preloading-the-page-cache/</link>
      <pubDate>Sat, 04 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/09/04/speed-up-drupal-by-preloading-the-page-cache/</guid>
      <description>If you need some technical background, have a look here. The preload cache script I&amp;rsquo;ve been using for a couple a months:
#!/bin/bash # # Preload a web site&amp;#39;s cache # site=&amp;#34;dornea.nu&amp;#34; tmp=&amp;#34;downloads&amp;#34; log=&amp;#34;log.txt&amp;#34; echo &amp;#34;Crawling $site.&amp;#34; # Remove any prior downloaded files. rm -rf $tmp # Clear the page cache first. wget --quiet --delete-after http://$site/[insert reset cache script here].php # Crawl the site # # Crawl arguments: # --recursive Crawl the site # --domains=example.</description>
    </item>
    
    <item>
      <title>Some Drupal peculiarities</title>
      <link>http://blog.dornea.nu/2009/09/15/some-drupal-peculiarities/</link>
      <pubDate>Tue, 15 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2009/09/15/some-drupal-peculiarities/</guid>
      <description>Add Lightbox2 functionalities to WYSIWYG editor TinyMCE - who thought this would cost me about 6 hours of work? In fact that was the easiest part: I just followed the instructions on http://drupal.org/node/252153 and everything worked well! Before being able to do that, some upgrades were necessary. On http://drupal.org/project/tinymce I was told that the module was deprecated and replaced by the Wysiwyg API. So I had to remove the old TinyMCE module, install the new one and add at least one editor library as described on http://drupal.</description>
    </item>
    
  </channel>
</rss>

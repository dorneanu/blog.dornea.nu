<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on blog.dornea.nu</title>
    <link>http://blog.dornea.nu/tags/golang/</link>
    <description>Recent content in golang on blog.dornea.nu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Apr 2021 00:00:00 +0200</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang</title>
      <link>http://blog.dornea.nu/bookmarks/golang/</link>
      <pubDate>Wed, 21 Apr 2021 10:26:01 +0200</pubDate>
      
      <guid>http://blog.dornea.nu/bookmarks/golang/</guid>
      <description>Microservices   Building a global services network using Go, QUIC and Micro
  Microservices on Go with the Go Kit
  How I&amp;rsquo;m writing Serverless services in Golang
 Service discovery allows you to register the location of services, with a user friendly name, so that you can find other services by name. AWS provides a Serverless offering for this, called Cloudmap
 cloud application library
 The most important lesson I hope you take away from this, however, is protecting your business logic from the sea of AWS services and technologies.</description>
    </item>
    
    <item>
      <title>A JavaScript keylogger using a websocket Golang server</title>
      <link>http://blog.dornea.nu/gists/a-javascript-keylogger-using-a-websocket-golang-server/</link>
      <pubDate>Fri, 26 Feb 2021 11:12:21 +0100</pubDate>
      
      <guid>http://blog.dornea.nu/gists/a-javascript-keylogger-using-a-websocket-golang-server/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Implement an access key rotator</title>
      <link>http://blog.dornea.nu/2021/04/25/implement-an-access-key-rotator/</link>
      <pubDate>Sun, 25 Apr 2021 00:00:00 +0200</pubDate>
      
      <guid>http://blog.dornea.nu/2021/04/25/implement-an-access-key-rotator/</guid>
      <description>Introduction With the recent success of Github actions you can automate lots of things whenever something in your repos changes, e.g. automatically generate static HTML content (using hugo) and push it to some repository for which GitHub Pages has been configured. Check this awesome actions list for more use cases.
Using encrypted secrets defined either per repository or organization, you can bring your Github workflow to the next level: Authenticate against APIs, login to different services while keeping your secrets/credentials away from your repositories.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>gdb on blog.dornea.nu</title><link>http://blog.dornea.nu/tags/gdb/</link><description>Recent content in gdb on blog.dornea.nu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 01 Jul 2015 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/gdb/index.xml" rel="self" type="application/rss+xml"/><item><title>Debugging Android native shared libraries</title><link>http://blog.dornea.nu/2015/07/01/debugging-android-native-shared-libraries/</link><pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2015/07/01/debugging-android-native-shared-libraries/</guid><description>Since I haven&amp;rsquo;t done this before, I thought I could share some experiences with you. All this began during some APK analysis which was heavily using JNIs. In my particular case Java Native Interfaces were used to call functions inside libraries written in C/C++. At that time I was quite unfamiliar with JNIs and how they actually work. Besides that I haven&amp;rsquo;t debugged any native applications/libraries on Android before. So this was the perfect opportunity to have a closer look at Android NDK and its debugging features.</description></item></channel></rss>
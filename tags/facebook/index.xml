<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>facebook on blog.dornea.nu</title>
    <link>http://blog.dornea.nu/tags/facebook/</link>
    <description>Recent content in facebook on blog.dornea.nu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Feb 2021 11:12:17 +0100</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/facebook/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scaling Static Analyses at Facebook</title>
      <link>http://blog.dornea.nu/notes/scaling-static-analyses-at-facebook/</link>
      <pubDate>Fri, 26 Feb 2021 11:12:17 +0100</pubDate>
      
      <guid>http://blog.dornea.nu/notes/scaling-static-analyses-at-facebook/</guid>
      <description>https://cacm.acm.org/magazines/2019/8/238344-scaling-static-analyses-at-facebook/fulltext
 To industry professionals we say: advanced static analyses, like those found in the research literature, can be deployed at scale and deliver value for general code. And to academics we say: from an industrial point of view the subject appears to have many unexplored avenues, and this provides research opportunities to inform future tools.
 Deployments &amp;ldquo;diff time&amp;rdquo; deployment  analyzers participate as bots in code review make automatic comments when engineer submits code modification this kind of deployment lead to 70% fix rate traditional (offline or batch) deployment saw a 0% fix rate security related issues are pushed to the security engineer on-call for commenting on code modification  Software Development at Facebook  there is a main codebase (master) this gets altered by modifications submitted by devs CI/CD:  anaylyses run on the code modification and participate by commenting their findings directly in the code review tool    Reporting  The actioned reports and missed bugs are related to the classic concepts of true positives and false negatives from the academic static analysis literature.</description>
    </item>
    
    <item>
      <title>Block facebook with iptables on OpenWrt</title>
      <link>http://blog.dornea.nu/2011/04/02/block-facebook-with-iptables-on-openwrt/</link>
      <pubDate>Sat, 02 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/04/02/block-facebook-with-iptables-on-openwrt/</guid>
      <description>Say NO to facebook and add these lines to /etc/firewall.user
# This file is interpreted as shell script. # Put your custom $IPT rules here, they will # be executed with each firewall (re-)start. IPT=iptables NET_LAN=192.168.0.0/16 ... # facebook $IPT -I FORWARD -p tcp -m iprange --dst-range 66.220.144.0-66.220.159.255 --dport 443 -j DROP $IPT -I FORWARD -p tcp -m iprange --dst-range 69.63.176.0-69.63.191.255 --dport 443 -j DROP $IPT -I FORWARD -p tcp -m iprange --dst-range 204.</description>
    </item>
    
  </channel>
</rss>

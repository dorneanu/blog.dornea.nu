<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>re on blog.dornea.nu</title><link>http://blog.dornea.nu/tags/re/</link><description>Recent content in re on blog.dornea.nu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 05 Aug 2014 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/re/index.xml" rel="self" type="application/rss+xml"/><item><title>Android Dynamic Code Analysis - Mastering DroidBox</title><link>http://blog.dornea.nu/2014/08/05/android-dynamic-code-analysis-mastering-droidbox/</link><pubDate>Tue, 05 Aug 2014 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2014/08/05/android-dynamic-code-analysis-mastering-droidbox/</guid><description>In this article I&amp;rsquo;ll have a a closer look at DroidBox which provides a mobile sandbox to look at Android applications. In the previous post I&amp;rsquo;ve dealt with static code analysis. This time will start running our malicious application and look at the &amp;ldquo;noise&amp;rdquo; it generates. That would be:
file system access network activity interaction with the operating system interaction with other applications etc. DroidBox is very easy to use and consists of an own system image and kernel meant to log one applications activities.</description></item><item><title>Disect Android APKs like a Pro - Static code analysis</title><link>http://blog.dornea.nu/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis/</link><pubDate>Mon, 07 Jul 2014 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis/</guid><description>I&amp;rsquo;ve started writing this IPython notebook in order to make myself more comfortable with Android and its SDK. Due to some personal interests I thought I could also have a look at the available RE tools and learn more about their pros &amp;amp; cos. In particular I had a closer look at AndroGuard which seems to be good at:
Reverse engineering, Malware and goodware analysis of Android applications &amp;hellip; and more (ninja !</description></item><item><title>Links of the Week #14</title><link>http://blog.dornea.nu/2013/10/25/links-of-the-week-#14/</link><pubDate>Fri, 25 Oct 2013 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2013/10/25/links-of-the-week-#14/</guid><description> FBI Tor Malware Analysis Intro into Reverse Engineering Course Dear undergraduated hacker Penetration Testing Practice Lab / Vulnerable Apps/Systems How Offensive Cyber Security is Changing the Industry</description></item><item><title>Links of the week #7</title><link>http://blog.dornea.nu/2013/07/12/links-of-the-week-#7/</link><pubDate>Fri, 12 Jul 2013 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2013/07/12/links-of-the-week-#7/</guid><description>Root Cause Analysis Integer Overflows: Nice analysis! Nginx just became the most used web server among the top 1000 websites: Glad to hear that! Hacking Java Bytecode for Programmers (Part4) Krakatau And The Case Of The Integer Overflow: The 4th part is online! This time dealing with integer overflows&amp;hellip; Secure website-authentication using GPG keys: Nice idea but lacks of proper secure implementation. Uncovering Android Master Key That Makes 99% of Devices Vulnerable: Sort of link of the week!</description></item><item><title>Links of the Week #5</title><link>http://blog.dornea.nu/2013/06/21/links-of-the-week-#5/</link><pubDate>Fri, 21 Jun 2013 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2013/06/21/links-of-the-week-#5/</guid><description>This weeks top links:
The most sophisticated Android Trojan: Really nice analysis. I think security on mobile devices will become more and more hype. At our current rate of progress, IPv6 will be fully implemented on May 10,Â 2148: `There is no reason for any individual to have a computer in his home. Well.. Not really! Writing buffer overflow exploits - a tutorial for beginners: Another buffer overflow tutorial. Buffer Overflows - Nopsled and Ret2Libc methods: Just excellent!</description></item><item><title>Links of the Week #3</title><link>http://blog.dornea.nu/2013/05/31/links-of-the-week-#3/</link><pubDate>Fri, 31 May 2013 00:00:00 +0000</pubDate><guid>http://blog.dornea.nu/2013/05/31/links-of-the-week-#3/</guid><description>Anatomy of a hack: How crackers ransack passwords like qeadzcwrsfxv1331 This is definetely link of the month! I never had to crack hashes in my life but this article is way the best introduction to the cracking/brute-forcing techniques. This is a must for all crackers out there (Thanks Marcin for the link). Yes, disassemble with Javap ALL OVER THE PLACE! Hacking Java Bytecode for Programmers (Part3): If the site is down check out this link.</description></item></channel></rss>
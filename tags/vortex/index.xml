<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vortex on blog.dornea.nu</title>
    <link>http://blog.dornea.nu/tags/vortex/</link>
    <description>Recent content in vortex on blog.dornea.nu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 May 2013 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/vortex/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OverTheWire: Vortex Level1</title>
      <link>http://blog.dornea.nu/2013/05/03/overthewire-vortex-level1/</link>
      <pubDate>Fri, 03 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/05/03/overthewire-vortex-level1/</guid>
      <description>Solution for http://www.overthewire.org/wargames/vortex/vortex1.shtml. Here&amp;rsquo;s the code they have used:
#include #include #include #include #define e(); if(((unsigned int)ptr &amp;amp; 0xff000000)==0xca000000) { setresuid(geteuid(), geteuid(), geteuid()); execlp(&amp;#34;/bin/sh&amp;#34;, &amp;#34;sh&amp;#34;, &amp;#34;-i&amp;#34;, NULL); }  void print(unsigned char *buf, int len) { int i; printf(&amp;#34;[ &amp;#34;); for(i=0; i &amp;lt; len; i++) printf(&amp;#34;%x &amp;#34;, buf[i]); printf(&amp;#34; ]\n&amp;#34;); } int main() { unsigned char buf[512]; unsigned char *ptr = buf + (sizeof(buf)/2); unsigned int x; while((x = getchar()) !</description>
    </item>
    
    <item>
      <title>OverTheWire: Vortex Level2</title>
      <link>http://blog.dornea.nu/2013/05/02/overthewire-vortex-level2/</link>
      <pubDate>Thu, 02 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/05/02/overthewire-vortex-level2/</guid>
      <description>Solution for level2:
Here is the code:
#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;sys/types.h&amp;gt; int main(int argc, char **argv) { char *args[] = { &amp;#34;/bin/tar&amp;#34;, &amp;#34;cf&amp;#34;, &amp;#34;/tmp/ownership.$$.tar&amp;#34;, argv[1], argv[2], argv[3] }; execv(args[0], args); } $$ expands to the process ID of the shell.
$ echo $$ 24489 Let&amp;rsquo;s make some observations:
vortex2@melissa:~$ ls -l /etc/vortex_pass/vortex3 -r-------- 1 vortex3 vortex3 10 2011-11-14 18:15 /etc/vortex_pass/vortex3 vortex2@melissa:~$ ls -l /vortex/vortex2 -r-sr-x--- 1 vortex3 vortex2 7134 2011-11-13 23:07 /vortex/vortex2 The password file is owned by vortex3.</description>
    </item>
    
    <item>
      <title>OverTheWire: Vortex Level0</title>
      <link>http://blog.dornea.nu/2009/05/21/overthewire-vortex-level0/</link>
      <pubDate>Thu, 21 May 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2009/05/21/overthewire-vortex-level0/</guid>
      <description>So what&amp;rsquo;s this whole thing about? &amp;ldquo;The wargames offered by the OverTheWire community can help you to learn and practice security concepts in the form of funfilled games.&amp;rdquo; by OverTheWire.org. So I started with Vortex and coded an example how to read 4 integers from server, sum them up, send result to server and get the login information back from server again. Sounds quite simple. I admit I had to refresh my knowledge about linux socket programming and go through some coding examples.</description>
    </item>
    
  </channel>
</rss>

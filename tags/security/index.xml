<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on blog.dornea.nu</title>
    <link>http://blog.dornea.nu/tags/security/</link>
    <description>Recent content in security on blog.dornea.nu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Feb 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TLS Client authentication using Bitnami Nginx stack</title>
      <link>http://blog.dornea.nu/2016/02/18/tls-client-authentication-using-bitnami-nginx-stack/</link>
      <pubDate>Thu, 18 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/02/18/tls-client-authentication-using-bitnami-nginx-stack/</guid>
      <description>I&amp;rsquo;ve felt that I have to write it down since it took almost 2 days to find the root cause of:
[info] 30979#0: *2 client SSL certificate verify error: (18:self signed certificate) while reading client request headers, client: xxx, server: yyy, request: &amp;#34;GET / HTTP/1.1&amp;#34;, host: &amp;#34;yyy&amp;#34; Use nginx stack environment Not generating the certificates inside the Bitnami environment was the root cause - at least I think it is. In your Bitnami installation folder (remember the instructions here) you&amp;rsquo;ll find a small script called use_nginxstack:</description>
    </item>
    
    <item>
      <title>Chrooting nginx, php-fpm and mysql using Bitnami </title>
      <link>http://blog.dornea.nu/2016/02/12/chrooting-nginx-php-fpm-and-mysql-using-bitnami/</link>
      <pubDate>Fri, 12 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/02/12/chrooting-nginx-php-fpm-and-mysql-using-bitnami/</guid>
      <description>Having talked about hardening your server using chroot in a previous post I&amp;rsquo;ve felt that the whole process was way to complicated. I wanted to have a more generic solution regardless of the operating system (and especially the Linux distro). Besides that I wasn&amp;rsquo;t quite happy changing the systems systemd settings and do several modifications to the already running system. What I wanted to achieve was a closed, portable system of running applications inside a chroot environment.</description>
    </item>
    
    <item>
      <title>HowTo: Put nginx and PHP to jail in Debian 8</title>
      <link>http://blog.dornea.nu/2016/01/15/howto-put-nginx-and-php-to-jail-in-debian-8/</link>
      <pubDate>Fri, 15 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/01/15/howto-put-nginx-and-php-to-jail-in-debian-8/</guid>
      <description>Although I thought this would be an easy task, it turned out that chrooting daemons takes more than copying config files and libraries. There are donzens of tutorials out there how to do it, but the devil lies in detail - as always. Setting up a chroot environment is easy. But securing it properly is prone to faults which in worst case could let an attacker escape the chroot. And this is your worst nightmare, right?</description>
    </item>
    
    <item>
      <title>Debugging Android native shared libraries</title>
      <link>http://blog.dornea.nu/2015/07/01/debugging-android-native-shared-libraries/</link>
      <pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2015/07/01/debugging-android-native-shared-libraries/</guid>
      <description>Since I haven&amp;rsquo;t done this before, I thought I could share some experiences with you. All this began during some APK analysis which was heavily using JNIs. In my particular case Java Native Interfaces were used to call functions inside libraries written in C/C++. At that time I was quite unfamiliar with JNIs and how they actually work. Besides that I haven&amp;rsquo;t debugged any native applications/libraries on Android before. So this was the perfect opportunity to have a closer look at Android NDK and its debugging features.</description>
    </item>
    
    <item>
      <title>usd AG Hacker challenge 2015 - Solutions</title>
      <link>http://blog.dornea.nu/2015/03/18/usd-ag-hacker-challenge-2015-solutions/</link>
      <pubDate>Wed, 18 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2015/03/18/usd-ag-hacker-challenge-2015-solutions/</guid>
      <description>usd AG has announced a hacking challenge I have participated at. The target system was available at http://82.195.79.41/. Now let me sum up thg steps that have been required in order to get all 6 tokens.
# &amp;lt;!-- collapse=True --&amp;gt; import pandas as pd import sqlite3 import binascii Scratch the surface Let&amp;rsquo;s first conduct a nmap scan to see which ports are open.
%%bash nmap -A -T4 82.195.79.41 Starting Nmap 6.</description>
    </item>
    
    <item>
      <title>HowTo: iOS Apps - Static analysis</title>
      <link>http://blog.dornea.nu/2014/10/29/howto-ios-apps-static-analysis/</link>
      <pubDate>Wed, 29 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/10/29/howto-ios-apps-static-analysis/</guid>
      <description>In this short article I&amp;rsquo;ll try to explain what are the main steps to analyze an iOS app. Since I&amp;rsquo;ve writen similar posts related to Android I thought I could devote some of spare time writing about the steps required to analyze iOS apps/binaries. But first of all let&amp;rsquo;s start with:
What&amp;rsquo;s an iOS app? In a nutshell here are the main characteristics:
 Objective-C / C / C++ compiled (ARM) executable mostly encrypted using Apple&amp;rsquo;s Fairplay DRM it runs in a sandbox it&amp;rsquo;s installed by the user mobile apps come as an IPA file which is the counterpart to Android&amp;rsquo;s APK  Now that you roughly know what an iOS app is let&amp;rsquo;s have a look at the most common blackbox pentesting tools out there.</description>
    </item>
    
    <item>
      <title>Android Dynamic Code Analysis - Mastering DroidBox</title>
      <link>http://blog.dornea.nu/2014/08/05/android-dynamic-code-analysis-mastering-droidbox/</link>
      <pubDate>Tue, 05 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/08/05/android-dynamic-code-analysis-mastering-droidbox/</guid>
      <description>In this article I&amp;rsquo;ll have a a closer look at DroidBox which provides a mobile sandbox to look at Android applications. In the previous post I&amp;rsquo;ve dealt with static code analysis. This time will start running our malicious application and look at the &amp;ldquo;noise&amp;rdquo; it generates. That would be:
 file system access network activity interaction with the operating system interaction with other applications etc.  DroidBox is very easy to use and consists of an own system image and kernel meant to log one applications activities.</description>
    </item>
    
    <item>
      <title>Disect Android APKs like a Pro - Static code analysis</title>
      <link>http://blog.dornea.nu/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis/</link>
      <pubDate>Mon, 07 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/07/07/disect-android-apks-like-a-pro-static-code-analysis/</guid>
      <description>I&amp;rsquo;ve started writing this IPython notebook in order to make myself more comfortable with Android and its SDK. Due to some personal interests I thought I could also have a look at the available RE tools and learn more about their pros &amp;amp; cos. In particular I had a closer look at AndroGuard which seems to be good at:
 Reverse engineering, Malware and goodware analysis of Android applications &amp;hellip; and more (ninja !</description>
    </item>
    
    <item>
      <title>Googles XSS Game - Solutions</title>
      <link>http://blog.dornea.nu/2014/06/02/googles-xss-game-solutions/</link>
      <pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/06/02/googles-xss-game-solutions/</guid>
      <description>&lt;p&gt;These are my steps how I&amp;rsquo;ve solved the &lt;a href=&#34;https://xss-game.appspot.com/&#34;&gt;XSS Game&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;level-1&#34;&gt;Level 1&lt;/h2&gt;
&lt;p&gt;This is the most obvious and easiest one. Just insert following code and you&amp;rsquo;re done:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&amp;lt;script&amp;gt;alert(&lt;span style=&#34;color:#3677a9&#34;&gt;1&lt;/span&gt;)&amp;lt;&lt;span style=&#34;color:#a61717;background-color:#e3d2d2&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;level-2&#34;&gt;Level 2&lt;/h2&gt;
&lt;p&gt;Since the &lt;code&gt;script&lt;/code&gt; won&amp;rsquo;t work you&amp;rsquo;ll have to think of another tags to trigger JavaScript code execution. The first thing which came in mind was to use &lt;code&gt;img&lt;/code&gt; tags along with the &lt;code&gt;onerror&lt;/code&gt; attributes. Here you go:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&amp;lt;img src=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;http://inexist.ent&amp;#34;&lt;/span&gt; onerror=&lt;span style=&#34;color:#ed9d13&#34;&gt;&amp;#34;javascript:alert(1)&amp;#34;&lt;/span&gt;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>BerlinSides 0x05</title>
      <link>http://blog.dornea.nu/2014/05/27/berlinsides-0x05/</link>
      <pubDate>Tue, 27 May 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/05/27/berlinsides-0x05/</guid>
      <description>The BerlinSides is a conference from hacker for hacker. This years motto was: &amp;hellip;you ain&amp;rsquo;t listening. All my greetings go to:
 nullsecurity.net Aluc Universal Hall Team  </description>
    </item>
    
    <item>
      <title>24h Android sniffing using tcpdump</title>
      <link>http://blog.dornea.nu/2014/01/23/24h-android-sniffing-using-tcpdump/</link>
      <pubDate>Thu, 23 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/01/23/24h-android-sniffing-using-tcpdump/</guid>
      <description>For better display results you can also have a look at the 24h Android Monitoring Jupyter Notebook.
 Motivation I&amp;rsquo;ve started this little project since I was mainly interested in the data my smartphone is ending all the time without my knowledge. I have a bunch of apps installed on my phone and I have absolutely no ideea which (kind of) data is beeing transfered to the Internet all day long.</description>
    </item>
    
    <item>
      <title>24h Android sniffing using tcpdump - IPython Notebook Version</title>
      <link>http://blog.dornea.nu/2014/01/23/24h-android-sniffing-using-tcpdump-ipython-notebook-version/</link>
      <pubDate>Thu, 23 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2014/01/23/24h-android-sniffing-using-tcpdump-ipython-notebook-version/</guid>
      <description>Motivation I&amp;rsquo;ve started this little project since I was mainly interested in the data my smartphone is sending all the time without my knowledge. I have a bunch of apps installed on my phone and I have absolutely no ideea which (kind of) data is beeing transfered to the Internet all day long. I thought I&amp;rsquo;d be a great ideea to monitor/sniff my data interface (3G, Edge etc. NOT Wifi) for 24h during my normal daily phone usage.</description>
    </item>
    
    <item>
      <title>HowTo: Automate Burp using Burp Extender API</title>
      <link>http://blog.dornea.nu/2013/08/02/howto-automate-burp-using-burp-extender-api/</link>
      <pubDate>Fri, 02 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/08/02/howto-automate-burp-using-burp-extender-api/</guid>
      <description>I really love Burp. Since I use it on a daily basis I thought there might be some way to automate it. Usually I mainly do these steps to scan some URL:
 Define scope Start manual exploring OR spider the URL in order to get some target map Activate passive scanning Activate live scanning Wait to the scan to finish Have a look at the results Save/export the results  Well these are a lot of steps which have to be done manually.</description>
    </item>
    
    <item>
      <title>Hacking Altoro Mutual</title>
      <link>http://blog.dornea.nu/2013/05/06/hacking-altoro-mutual/</link>
      <pubDate>Mon, 06 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/05/06/hacking-altoro-mutual/</guid>
      <description>Introduction AltoroMutual is an vulnerable-by-design web application created by WatchFire (now AppScan Standard) as a demo test application for their BlackBox Scanner. (Source:https://www.owasp.org/index.php/AltoroMutual)
The demo can be found at http://demo.testfire.net/.
Vulnerabilities /default.aspx?content= There is a file inclusion vulnerability which we&amp;rsquo;ll use for further investigation. URL http://demo.testfire.net/default.aspx?content=../testing.txt will show:
An Error Has Occurred Summary: Could not find file &amp;#39;D:downloadsAltoroMutual_v6website esting.txt&amp;#39;. Error Message: System.IO.FileNotFoundException: Could not find file &amp;#39;D:downloadsAltoroMutual_v6website esting.txt&amp;#39;. File name: &amp;#39;D:downloadsAltoroMutual_v6website esting.</description>
    </item>
    
    <item>
      <title>OverTheWire: Vortex Level1</title>
      <link>http://blog.dornea.nu/2013/05/03/overthewire-vortex-level1/</link>
      <pubDate>Fri, 03 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/05/03/overthewire-vortex-level1/</guid>
      <description>Solution for http://www.overthewire.org/wargames/vortex/vortex1.shtml. Here&amp;rsquo;s the code they have used:
#include #include #include #include #define e(); if(((unsigned int)ptr &amp;amp; 0xff000000)==0xca000000) { setresuid(geteuid(), geteuid(), geteuid()); execlp(&amp;#34;/bin/sh&amp;#34;, &amp;#34;sh&amp;#34;, &amp;#34;-i&amp;#34;, NULL); }  void print(unsigned char *buf, int len) { int i; printf(&amp;#34;[ &amp;#34;); for(i=0; i &amp;lt; len; i++) printf(&amp;#34;%x &amp;#34;, buf[i]); printf(&amp;#34; ]\n&amp;#34;); } int main() { unsigned char buf[512]; unsigned char *ptr = buf + (sizeof(buf)/2); unsigned int x; while((x = getchar()) !</description>
    </item>
    
    <item>
      <title>OverTheWire: Vortex Level2</title>
      <link>http://blog.dornea.nu/2013/05/02/overthewire-vortex-level2/</link>
      <pubDate>Thu, 02 May 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2013/05/02/overthewire-vortex-level2/</guid>
      <description>Solution for level2:
Here is the code:
#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;sys/types.h&amp;gt; int main(int argc, char **argv) { char *args[] = { &amp;#34;/bin/tar&amp;#34;, &amp;#34;cf&amp;#34;, &amp;#34;/tmp/ownership.$$.tar&amp;#34;, argv[1], argv[2], argv[3] }; execv(args[0], args); } $$ expands to the process ID of the shell.
$ echo $$ 24489 Let&amp;rsquo;s make some observations:
vortex2@melissa:~$ ls -l /etc/vortex_pass/vortex3 -r-------- 1 vortex3 vortex3 10 2011-11-14 18:15 /etc/vortex_pass/vortex3 vortex2@melissa:~$ ls -l /vortex/vortex2 -r-sr-x--- 1 vortex3 vortex2 7134 2011-11-13 23:07 /vortex/vortex2 The password file is owned by vortex3.</description>
    </item>
    
    <item>
      <title>CCC / 29C3</title>
      <link>http://blog.dornea.nu/2012/12/30/ccc-/-29c3/</link>
      <pubDate>Sun, 30 Dec 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2012/12/30/ccc-/-29c3/</guid>
      <description>Description  &amp;ldquo;The 29th Chaos Communication Congress (29C3) is an annual four-day conference on technology, society and utopia. The Congress offers lectures and workshops on a multitude of topics including (but not limited to) information technology and generally a critical-creative attitude towards technology and the discussion about the effects of technological advances on society.
For 29 years, the congress has been organized by the community and appreciates all kinds of participation.</description>
    </item>
    
    <item>
      <title>Thank God there is iodine! IPv4 over DNS</title>
      <link>http://blog.dornea.nu/2011/11/09/thank-god-there-is-iodine-ipv4-over-dns/</link>
      <pubDate>Wed, 09 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/11/09/thank-god-there-is-iodine-ipv4-over-dns/</guid>
      <description>I always knew DNS/ICMP traffic is mostly allowed and un-monitored. It was about time to setup some DNS server on my vServer which would allow me to break free! Thanks God there is iodine which allows you to route IP traffic over DNS.
I was recently at some cafe and thought it would be a great ideea to test my configuration. I&amp;rsquo;ve setup the iodine server a few weeks before.This is what I did:</description>
    </item>
    
    <item>
      <title>HowTo: Keep your passwords safe using SQLite and SQLCipher</title>
      <link>http://blog.dornea.nu/2011/07/28/howto-keep-your-passwords-safe-using-sqlite-and-sqlcipher/</link>
      <pubDate>Thu, 28 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/07/28/howto-keep-your-passwords-safe-using-sqlite-and-sqlcipher/</guid>
      <description>I was recently doing some hacks and realized that there must be a way to store gained information in a secure manner. I usually encrypt sensitive information (like passwords, accounts etc.) using GPG. But that&amp;rsquo;s quite unhandy: You always need your private key and the encrypted data is stored unencrypted on the device (unless you&amp;rsquo;re using full disk encryption which shouldn&amp;rsquo;t be a problem since data is stored encrypted on the device).</description>
    </item>
    
    <item>
      <title>Free PPTP VPN servers</title>
      <link>http://blog.dornea.nu/2011/06/24/free-pptp-vpn-servers/</link>
      <pubDate>Fri, 24 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/06/24/free-pptp-vpn-servers/</guid>
      <description>I&amp;rsquo;d recommend you all using some VPN to keep your identity safe and private. Here&amp;rsquo;s some setup:
$ pptpsetup --create vpnde --server pptp.freedevpn.com --username free --password --encrypt $ pptpsetup --create vpnca --server freecavpn.com --username free --password --encrypt $ pptpsetup --create vpnl --server freenlvpn.com --username free --password --encrypt $ pptpsetup --create vpnuk --server freeukvpn.com --username free --password --encrypt For the passwords have a look at freenlvpn.com, freedevpn.com, freeukvpn.com, freecavpn.com. The VPN passwords changes every 12 hours, so keep in mind to change whenever the authentication failes.</description>
    </item>
    
    <item>
      <title>Block facebook with iptables on OpenWrt</title>
      <link>http://blog.dornea.nu/2011/04/02/block-facebook-with-iptables-on-openwrt/</link>
      <pubDate>Sat, 02 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/04/02/block-facebook-with-iptables-on-openwrt/</guid>
      <description>Say NO to facebook and add these lines to /etc/firewall.user
# This file is interpreted as shell script. # Put your custom $IPT rules here, they will # be executed with each firewall (re-)start. IPT=iptables NET_LAN=192.168.0.0/16 ... # facebook $IPT -I FORWARD -p tcp -m iprange --dst-range 66.220.144.0-66.220.159.255 --dport 443 -j DROP $IPT -I FORWARD -p tcp -m iprange --dst-range 69.63.176.0-69.63.191.255 --dport 443 -j DROP $IPT -I FORWARD -p tcp -m iprange --dst-range 204.</description>
    </item>
    
    <item>
      <title>HowTo: Full-Encrypt data using Gentoo,Luks and initramfs</title>
      <link>http://blog.dornea.nu/2011/03/07/howto-full-encrypt-data-using-gentooluks-and-initramfs/</link>
      <pubDate>Mon, 07 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/03/07/howto-full-encrypt-data-using-gentooluks-and-initramfs/</guid>
      <description>Since last post many things have changed. No more NetBSD on my laptop (this has to do with several things, I&amp;rsquo;ll write about in a future post): I had to fall in love with Gentoo! I&amp;rsquo;ll try to give you some quick overview related to this posts title: Encryption under Gentoo using Luks.
There are serveral (good!) tutorials out there. Among these I&amp;rsquo;ve used:
&amp;lt;td&amp;gt; There you&#39;ll get a lot of information related to the topic.</description>
    </item>
    
    <item>
      <title>Stay clean and anonymous with Google Apps</title>
      <link>http://blog.dornea.nu/2011/02/10/stay-clean-and-anonymous-with-google-apps/</link>
      <pubDate>Thu, 10 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/02/10/stay-clean-and-anonymous-with-google-apps/</guid>
      <description>I was recently reading some documentary article about the Mexican drug war near USA&amp;rsquo;s national border. Actually it was rather an interview with some guy who fights against the (corrupt) authorities and the drugs leaders by running some informative blog. Feel free to activate your investigative mind and find out which blog I&amp;rsquo;m talking about&amp;hellip;
So this guy was clever enough to hide its identity - what would you do in his case ?</description>
    </item>
    
    <item>
      <title>Find out your geolocation via MAC address</title>
      <link>http://blog.dornea.nu/2010/10/07/find-out-your-geolocation-via-mac-address/</link>
      <pubDate>Thu, 07 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/10/07/find-out-your-geolocation-via-mac-address/</guid>
      <description>Today I found a very interesting article about geoposition localisation based on MAC addresses. MAC addresses ? Yeah, right! As securiteam described here it is possible to find out your location using Google&amp;rsquo;s Location Services REST API. Further information can be found on Dinis Cruz blog. But where is all the data coming from? You may also have noticed Google&amp;rsquo;s Street View cars scanning your neighborhood for WLAN access points. Oh, I have forgotten about that: It wasn&amp;rsquo;t Google&amp;rsquo;s intention as stated here.</description>
    </item>
    
    <item>
      <title>HowTo: Secure your server using icmpKNOCK</title>
      <link>http://blog.dornea.nu/2010/10/03/howto-secure-your-server-using-icmpknock/</link>
      <pubDate>Sun, 03 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/10/03/howto-secure-your-server-using-icmpknock/</guid>
      <description>This time I&amp;rsquo;d like to give you a short usage description of icmpKNOCK that was recently released. The main reason I wrote it was lack of security measurements on my boxes. I didn&amp;rsquo;t want any sophisticated IDS tools nor complicated monitoring services. I wanted to implement something which will run on (almost) any platform without any external toolsb. Since the ping utility is available on most modern systems using ICMP packets to communicate with the server was the most reasonable approach.</description>
    </item>
    
    <item>
      <title>The Ac1db1tch3z exploit and &#34;Robert you suck&#34; thingie</title>
      <link>http://blog.dornea.nu/2010/09/17/the-ac1db1tch3z-exploit-and-robert-you-suck-thingie/</link>
      <pubDate>Fri, 17 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/09/17/the-ac1db1tch3z-exploit-and-robert-you-suck-thingie/</guid>
      <description>Yepp.. It&amp;rsquo;s another one. I&amp;rsquo;ve tested it on my own laptop and voila: BOOM! Anoher local root exploit is out there. In fact this exploit shouldn&amp;rsquo;t have been released at all.. An earlier incident was reported in 2007.So why in God&amp;rsquo;s sake is this malfunction still in the wild? We don&amp;rsquo;t know it. I&amp;rsquo;d call it stupidity, if you&amp;rsquo;re fine with me. L33t hackers like Ac1db1tch3z seem to have antipathy against good security researchers like Ben Hawkes.</description>
    </item>
    
    <item>
      <title>icmpKNOCK v0.2 released</title>
      <link>http://blog.dornea.nu/2010/09/13/icmpknock-v0.2-released/</link>
      <pubDate>Mon, 13 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/09/13/icmpknock-v0.2-released/</guid>
      <description>I&amp;rsquo;d like to announce the second main release of icmpKNOCK. I thought it was about time to release a new improved version. I&amp;rsquo;ve mainly focused on the actions mechanism and tried to implement some flexible way of defining actions, adding key pattern and setting payloads. Besides that I have managed it to install a SVN service in order to provide the latest development version of my current projects.
The CHANGELOG for this version isn&amp;rsquo;t quite long.</description>
    </item>
    
    <item>
      <title>Torrents over TOR?! Don&#39;t!</title>
      <link>http://blog.dornea.nu/2010/05/03/torrents-over-tor-dont/</link>
      <pubDate>Mon, 03 May 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/05/03/torrents-over-tor-dont/</guid>
      <description>&amp;ldquo;An increasing number of people are asking us about the recent paper coming out of Inria in France around Bittorrent and privacy attacks. This post tries to explain the attacks and what they imply. There are three pieces to the attack (or three separate attacks that build on each other, if you prefer).&amp;rdquo;
 The first attack is on people who configure their Bittorrent application to proxy their tracker traffic through Tor.</description>
    </item>
    
    <item>
      <title>Attacking Trusted Platform Module (TPM)</title>
      <link>http://blog.dornea.nu/2009/12/05/attacking-trusted-platform-module-tpm/</link>
      <pubDate>Sat, 05 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2009/12/05/attacking-trusted-platform-module-tpm/</guid>
      <description>For those of who believe that using authenticated boot features such as TPM should protect you against hackers&amp;hellip; : WRONG! In their latest project some guys from Frauenhofer SIT (Security Test Lab) have managed to conduct a quite realistic attack against a Windows machine with BitLocker, the disk encryption functionality in most recent Windows versions. As stated here there is a video which demonstrates a proof-of-concept implementation of such an attack.</description>
    </item>
    
    <item>
      <title>Pidgin stores account data in plaintext!</title>
      <link>http://blog.dornea.nu/2009/11/23/pidgin-stores-account-data-in-plaintext/</link>
      <pubDate>Mon, 23 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2009/11/23/pidgin-stores-account-data-in-plaintext/</guid>
      <description>I was just looking for some configuration files in Pidgins working directory ~/.purple/ and found this:
... -rw------- 1 victor users 22939 Nov 23 19:34 accounts.xml ... Well I wouldn&amp;rsquo;t have payed to much attention at that file, if it had not contained this:
$ head accounts.xml &amp;lt;?xml version=&amp;#39;1.0&amp;#39; encoding=&amp;#39;UTF-8&amp;#39; ?&amp;gt; &amp;lt;account version=&amp;#39;1.0&amp;#39;&amp;gt; &amp;lt;account&amp;gt; &amp;lt;protocol&amp;gt;prpl-msn&amp;lt;/protocol&amp;gt; &amp;lt;name&amp;gt;******@hotmail.de&amp;lt;/name&amp;gt; &amp;lt;password&amp;gt;**&amp;lt;/password&amp;gt; &amp;lt;alias&amp;gt;v****&amp;lt;/alias&amp;gt; &amp;lt;statuses&amp;gt; ... Plaintext passwords? I couldn&amp;rsquo;t believe it. So I searched on Pidgins Wiki site for some entries justifing this (in)secure measurement.</description>
    </item>
    
    <item>
      <title>HowTo: SSH-Tunnel over CorkScrew using Tor</title>
      <link>http://blog.dornea.nu/2009/08/05/howto-ssh-tunnel-over-corkscrew-using-tor/</link>
      <pubDate>Wed, 05 Aug 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2009/08/05/howto-ssh-tunnel-over-corkscrew-using-tor/</guid>
      <description>Nowadays it seems like we&amp;rsquo;re loosing our privacy and are being taped by video cameras all over. The same applies to Internet surveillance: By daily traffic analysis you can find out who is talking to whom over a public network. This traffic allows others to track your click behaviour and interests. So if any mailicious guy has access to your network traffic (@work, @home …) he will try to find more information about you, like e.</description>
    </item>
    
    <item>
      <title>CoWPAtty 4.2 for NetBSD</title>
      <link>http://blog.dornea.nu/2009/07/22/cowpatty-4.2-for-netbsd/</link>
      <pubDate>Wed, 22 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2009/07/22/cowpatty-4.2-for-netbsd/</guid>
      <description>From http://wirelessdefence.org/Contents/coWPAttyMain.htm:
 coWPAtty is designed to audit the pre-shared key (PSK) selection for WPA networks based on the TKIP protocol. - Joshua Wright.
 Since I had problems installing/compiling cowpatty, I had to modify the Makefile and several include-lines in some files. Currently I&amp;rsquo;m using NetBSD/Amd64. Feel free to modify the files at your needs. Download here!
Edit: As stated here, there is a newer version, 4.3. I edited the Makefile and created a new tarball.</description>
    </item>
    
    <item>
      <title>Mod2Exec - Execute modules </title>
      <link>http://blog.dornea.nu/2008/11/26/mod2exec-execute-modules/</link>
      <pubDate>Wed, 26 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2008/11/26/mod2exec-execute-modules/</guid>
      <description>Einleitung Wir leben in einer Zeit, in der Dynamik sowie Flexibilität eine große Rolle spielen. Wir alle besitzen bestimmte Fähigkeiten, die in bestimmten Situationen zum Einsatz kommen können. Das heißt, der Mensch braucht diese nur zur richtigen Zeit „aufzurufen“. Genauso soll ein Kernel, das Herzstück eines Betriebssystems, auch funktionieren: Die aktuelle
Systemkonfiguration wird überprüft und Module werden hochgeladen. Damit werden dem Kernel Schnittstellen zur Verfügung gestellt, die zur Steuerung der Hardware etc.</description>
    </item>
    
    <item>
      <title>Viral Infections on Linux</title>
      <link>http://blog.dornea.nu/2008/11/26/viral-infections-on-linux/</link>
      <pubDate>Wed, 26 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2008/11/26/viral-infections-on-linux/</guid>
      <description>Einleitung Wir leben in einem digitalen Zeitalter, in dem sich Technologien rasch weiterentwickeln und deren Präsenz für uns Menschen eine immer größer werdende Rolle spielt. Gleichzeitig erfahren wir eine Zunahme der Computer-Kriminalität, geprägt von mafiösen Strukturen, die sich zum Ziel gesetzt haben, Informationen im Eigeninteresse zu sammeln.
Die Wichtigkeit dieser Informationen variiert je nach Art des Angriffs und reicht von der IP-Adresse des Nutzers bis zur Kreditkarten- oder Versicherungsnummer. Die dabei verwendeten</description>
    </item>
    
  </channel>
</rss>

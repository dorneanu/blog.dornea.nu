<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>admin on blog.dornea.nu</title>
    <link>http://blog.dornea.nu/tags/admin/</link>
    <description>Recent content in admin on blog.dornea.nu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.dornea.nu/tags/admin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ringzer0 CTF - SysAdmin Linux</title>
      <link>http://blog.dornea.nu/2016/10/30/ringzer0-ctf-sysadmin-linux/</link>
      <pubDate>Sun, 30 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/10/30/ringzer0-ctf-sysadmin-linux/</guid>
      <description>SysAdmin Part 1 Let&amp;rsquo;s login to the machine:
$ sshpass -p VNZDDLq2x9qXCzVdABbR1HOtz ssh morpheus@for01.ringzer0team.com -p 13375 _ ____ __ _____(_)___ ____ _____ ___ _____/ __ \/ /____ ____ _____ ___ / ___/ / __ \/ __ `/_ / / _ \/ ___/ / / / __/ _ \/ __ `/ __ `__ \ / / / / / / / /_/ / / /_/ __/ / / /_/ / /_/ __/ /_/ / / / / / / /_/ /_/_/ /_/\__, / /___/\___/_/ \____/\__/\___/\__,_/_/ /_/ /_/ /____/ _ _ ___ _____ ___ ___ _ _ | (_)_ _ ___ / __|_ _| __| / _ \ &amp;#39; \| | | &amp;#39; \/ -_) | (__ | | | _| \___/_||_|_|_|_||_\___| \___| |_| |_| You have mail.</description>
    </item>
    
    <item>
      <title>Chrooting nginx, php-fpm and mysql using Bitnami </title>
      <link>http://blog.dornea.nu/2016/02/12/chrooting-nginx-php-fpm-and-mysql-using-bitnami/</link>
      <pubDate>Fri, 12 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/02/12/chrooting-nginx-php-fpm-and-mysql-using-bitnami/</guid>
      <description>Having talked about hardening your server using chroot in a previous post I&amp;rsquo;ve felt that the whole process was way to complicated. I wanted to have a more generic solution regardless of the operating system (and especially the Linux distro). Besides that I wasn&amp;rsquo;t quite happy changing the systems systemd settings and do several modifications to the already running system. What I wanted to achieve was a closed, portable system of running applications inside a chroot environment.</description>
    </item>
    
    <item>
      <title>HowTo: Put nginx and PHP to jail in Debian 8</title>
      <link>http://blog.dornea.nu/2016/01/15/howto-put-nginx-and-php-to-jail-in-debian-8/</link>
      <pubDate>Fri, 15 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2016/01/15/howto-put-nginx-and-php-to-jail-in-debian-8/</guid>
      <description>Although I thought this would be an easy task, it turned out that chrooting daemons takes more than copying config files and libraries. There are donzens of tutorials out there how to do it, but the devil lies in detail - as always. Setting up a chroot environment is easy. But securing it properly is prone to faults which in worst case could let an attacker escape the chroot. And this is your worst nightmare, right?</description>
    </item>
    
    <item>
      <title>OpenVPN for paranoids </title>
      <link>http://blog.dornea.nu/2015/11/17/openvpn-for-paranoids/</link>
      <pubDate>Tue, 17 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2015/11/17/openvpn-for-paranoids/</guid>
      <description>Continuing my admin series this time I&amp;rsquo;d like to setup a VPN using OpenVPN  as user-based VPN solution. Unlike IPSec solutions which require IPSec on both (server and client) sides, securing the VPN tunnel by OpenSSL is a more preferable option.
In this post I&amp;rsquo;ll try to show which steps have to be taken in order to:
 secure the communication channel use up-to-date (and secure!) TLS configurations prevent information leaks when the VPN tunnel is down  At least for the last one some additional steps are required to route your traffic only through the VPN tunnel.</description>
    </item>
    
    <item>
      <title>Advanced inter VLAN switching using Cisco</title>
      <link>http://blog.dornea.nu/2015/11/06/advanced-inter-vlan-switching-using-cisco/</link>
      <pubDate>Fri, 06 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2015/11/06/advanced-inter-vlan-switching-using-cisco/</guid>
      <description>Continuing my CCNA journey I&amp;rsquo;d like to address inter VLAN switching in a more detailed way. In this post I&amp;rsquo;ll configure my previous topology to use VTP and let STP prevent frame looping and other &amp;ldquo;anomalies&amp;rdquo; on Layer 2.
Updated network topology %%blockdiag # &amp;lt;!-- collapse=True --&amp;gt; diagram admin {â†” PC1 [shape = &amp;#34;cisco.pc&amp;#34;]; PC2 [shape = &amp;#34;cisco.pc&amp;#34;]; PC3 [shape = &amp;#34;cisco.pc&amp;#34;]; PC4 [shape = &amp;#34;cisco.pc&amp;#34;]; PC5 [shape = &amp;#34;cisco.pc&amp;#34;]; PC6 [shape = &amp;#34;cisco.</description>
    </item>
    
    <item>
      <title>Basic Layer 2 Switching using Cisco Packet Tracer</title>
      <link>http://blog.dornea.nu/2015/10/21/basic-layer-2-switching-using-cisco-packet-tracer/</link>
      <pubDate>Wed, 21 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2015/10/21/basic-layer-2-switching-using-cisco-packet-tracer/</guid>
      <description>As a pseudo-preparation for my CCNA exam I wanted to sum up some of the basic configuration steps related to Cisco switches. Although I won&amp;rsquo;t handle every topic related to Layer 2, I will assume you have already some network knowledge. The main reason for this post is to show how to setup a really small network infrastructure and configure its components. For my purposes I have used Cisco&amp;rsquo;s Packet Tracer to simulate the network which I highly recommend.</description>
    </item>
    
    <item>
      <title>Manage PKI using OpenSSL</title>
      <link>http://blog.dornea.nu/2015/10/02/manage-pki-using-openssl/</link>
      <pubDate>Fri, 02 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2015/10/02/manage-pki-using-openssl/</guid>
      <description>For better display results you can also have a look at the Manage a PKI using OpenSSL.
 In the previous X.509 related post I&amp;rsquo;ve had a look at the internals of a X.509 certficate. This time I want to setup my own PKI using some open source software. This post is a preparation for setting up a VPN using OpenVPN.
Before implementing the PKI let&amp;rsquo;s have a look what a PKI should definitely include (make sure you have a look at the Wikipedia entry):</description>
    </item>
    
    <item>
      <title>HowTo: Have a web performance boost with Nginx</title>
      <link>http://blog.dornea.nu/2012/01/26/howto-have-a-web-performance-boost-with-nginx/</link>
      <pubDate>Thu, 26 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2012/01/26/howto-have-a-web-performance-boost-with-nginx/</guid>
      <description>Why Nginx? Since I wanted to improve my sites load speed I thought I should look around for some lighttpd-alternatives which I have used for so many years. The really annoying thing about lighttpd is its configuration syntax. I don&amp;rsquo;t think it&amp;rsquo;s comprehensive nor easy to learn. Besides that I wanted to have a configuration where memcahed plays a major role: Serve static content (html) from memcache. Lighttpd does have some modules/tutorials how to interact with memcached but I couldn&amp;rsquo;t find any working configuration.</description>
    </item>
    
    <item>
      <title>HowTo: Redmine, Lighttpd with Debian</title>
      <link>http://blog.dornea.nu/2011/11/07/howto-redmine-lighttpd-with-debian/</link>
      <pubDate>Mon, 07 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/11/07/howto-redmine-lighttpd-with-debian/</guid>
      <description>I&amp;rsquo;ll just post my lighttpd.conf. The rest can be easily found on the Internet.
$HTTP[&amp;#34;host&amp;#34;] =~ &amp;#34;^dev.dornea.nu$&amp;#34; { evhost.path-pattern = &amp;#34;/home/redmine/current/public&amp;#34; server.follow-symlink = &amp;#34;enable&amp;#34; server.indexfiles = ( &amp;#34;dispatch.fcgi&amp;#34; ) server.error-handler-404 = &amp;#34;/dispatch.fcgi&amp;#34; #dir-listing.activate = &amp;#34;enable&amp;#34; url.rewrite-once = ( &amp;#34;^/(.*..+(?!html))$&amp;#34; =&amp;amp;gt; &amp;#34;$0&amp;#34;, &amp;#34;^/(.*).(.*)&amp;#34; =&amp;amp;gt; &amp;#34;$0&amp;#34;, ) fastcgi.server = ( &amp;#34;.fcgi&amp;#34; =&amp;amp;gt; ( &amp;#34;redmine&amp;#34; =&amp;amp;gt; ( &amp;#34;min-procs&amp;#34; =&amp;amp;gt; 1, &amp;#34;max-procs&amp;#34; =&amp;amp;gt; 5, &amp;#34;socket&amp;#34; =&amp;amp;gt; &amp;#34;/tmp/redmine.socket&amp;#34;, &amp;#34;bin-path&amp;#34; =&amp;amp;gt; &amp;#34;/usr/bin/ruby /home/redmine/current/public/dispatch.fcgi&amp;#34;, &amp;#34;bin-environment&amp;#34; =&amp;amp;gt; ( &amp;#34;RAILS_ENV&amp;#34; =&amp;amp;gt; &amp;#34;production&amp;#34; ) ) ) ) } My redmine installation can be found under /home/redmine/current</description>
    </item>
    
    <item>
      <title>Block facebook with iptables on OpenWrt</title>
      <link>http://blog.dornea.nu/2011/04/02/block-facebook-with-iptables-on-openwrt/</link>
      <pubDate>Sat, 02 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/04/02/block-facebook-with-iptables-on-openwrt/</guid>
      <description>Say NO to facebook and add these lines to /etc/firewall.user
# This file is interpreted as shell script. # Put your custom $IPT rules here, they will # be executed with each firewall (re-)start. IPT=iptables NET_LAN=192.168.0.0/16 ... # facebook $IPT -I FORWARD -p tcp -m iprange --dst-range 66.220.144.0-66.220.159.255 --dport 443 -j DROP $IPT -I FORWARD -p tcp -m iprange --dst-range 69.63.176.0-69.63.191.255 --dport 443 -j DROP $IPT -I FORWARD -p tcp -m iprange --dst-range 204.</description>
    </item>
    
    <item>
      <title>OpenBSD, FreeBSD, NetBSD - I do love beasts!</title>
      <link>http://blog.dornea.nu/2011/03/21/openbsd-freebsd-netbsd-i-do-love-beasts/</link>
      <pubDate>Mon, 21 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/03/21/openbsd-freebsd-netbsd-i-do-love-beasts/</guid>
      <description>&lt;p&gt;It all starts with virtualisation! Since there is no BSD at all on my laptop, I thought I should give the most important ones a chance: FreeBSD, OpenBSD and NetBSD. Although there were several rumours afloat â€“ related to complexity factors (installation, configuration etc.) â€“ I had absolutely no problem setting up *BSD with X11(!!!). Besides that I had a look at the packaging systems provided within each BSD. My conclusion: They are pretty much the same: &lt;strong&gt;make install&lt;/strong&gt; and basta. Here some screenshots:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My own cheap NAS - the OpenWRT way</title>
      <link>http://blog.dornea.nu/2011/03/19/my-own-cheap-nas-the-openwrt-way/</link>
      <pubDate>Sat, 19 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/03/19/my-own-cheap-nas-the-openwrt-way/</guid>
      <description>Introducing my TP-LinkÂ TL-WR1043ND:
Summary  OS: Linux OpenWrt 2.6.32.25 #1 Fri Nov 19 20:27:50 PST 2010 mips GNU/Linux CPU:Â system type : Atheros AR9132 rev 2 machine : TP-LINK TL-WR1043ND processor : 0 cpu model : MIPS 24Kc V7.4  Filesystems root@OpenWrt:~# df -Ph Filesystem Size Used Available Capacity Mounted on /dev/root 2.1M 2.1M 0 100% /rom tmpfs 14.4M 232.0K 14.2M 2% /tmp tmpfs 512.0K 0 512.0K 0% /dev /dev/sda1 1.</description>
    </item>
    
    <item>
      <title>HowTo: Full-Encrypt data using Gentoo,Luks and initramfs</title>
      <link>http://blog.dornea.nu/2011/03/07/howto-full-encrypt-data-using-gentooluks-and-initramfs/</link>
      <pubDate>Mon, 07 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/03/07/howto-full-encrypt-data-using-gentooluks-and-initramfs/</guid>
      <description>Since last post many things have changed. No more NetBSD on my laptop (this has to do with several things, I&amp;rsquo;ll write about in a future post): I had to fall in love with Gentoo! I&amp;rsquo;ll try to give you some quick overview related to this posts title: Encryption under Gentoo using Luks.
There are serveral (good!) tutorials out there. Among these I&amp;rsquo;ve used:
&amp;lt;td&amp;gt; There you&#39;ll get a lot of information related to the topic.</description>
    </item>
    
    <item>
      <title>OpenBSD 4.8 - First impressions</title>
      <link>http://blog.dornea.nu/2011/02/04/openbsd-4.8-first-impressions/</link>
      <pubDate>Fri, 04 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2011/02/04/openbsd-4.8-first-impressions/</guid>
      <description>Today I had the big opportunity to setup an OpenBSD based gateway. I&amp;rsquo;ve never used OpenBSD before and I was really excited about. All in one: Really clean (almost spartanic), secure 4.4BSD. Although I had some problems during the partitioning process - I didn&amp;rsquo;t thought they have such a l33t partitioning tool - the installation went smooth. Afterwards I&amp;rsquo;ve fetched the ports and installed some common utilities: No compilation errors etc.</description>
    </item>
    
    <item>
      <title>HowTo: SNAT/IP Masquerade between 2 wlan cards on Linux</title>
      <link>http://blog.dornea.nu/2010/11/25/howto-snat/ip-masquerade-between-2-wlan-cards-on-linux/</link>
      <pubDate>Thu, 25 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/11/25/howto-snat/ip-masquerade-between-2-wlan-cards-on-linux/</guid>
      <description>Although this is a quite minimalistic howto you should be able to do IP masquerading between your WLAN cards in less than 2 minutes. As I posted here I&amp;rsquo;d like to share use my WLAN cards to share one cards Internet connection with the other one. The following steps don&amp;rsquo;t apply only to wifi cards. The same commands should work on Ethernet cards too. Let&amp;rsquo;s start&amp;hellip;
The Big picture As you see you have 2 networks:</description>
    </item>
    
    <item>
      <title>HowTo: Secure your server using icmpKNOCK</title>
      <link>http://blog.dornea.nu/2010/10/03/howto-secure-your-server-using-icmpknock/</link>
      <pubDate>Sun, 03 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/10/03/howto-secure-your-server-using-icmpknock/</guid>
      <description>This time I&amp;rsquo;d like to give you a short usage description of icmpKNOCK that was recently released. The main reason I wrote it was lack of security measurements on my boxes. I didn&amp;rsquo;t want any sophisticated IDS tools nor complicated monitoring services. I wanted to implement something which will run on (almost) any platform without any external toolsb. Since the ping utility is available on most modern systems using ICMP packets to communicate with the server was the most reasonable approach.</description>
    </item>
    
    <item>
      <title>Drupals clean urls using Lighttpd: Moved from Lua to rewrite-once</title>
      <link>http://blog.dornea.nu/2010/09/07/drupals-clean-urls-using-lighttpd-moved-from-lua-to-rewrite-once/</link>
      <pubDate>Tue, 07 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/09/07/drupals-clean-urls-using-lighttpd-moved-from-lua-to-rewrite-once/</guid>
      <description>I&amp;rsquo;ve been using Lighttpd + Drupal for a long time. In order to have those sexy clean urls, you&amp;rsquo;ll have to do some rewrite stuff. A few months ago I found this Lua script, which served its purpose without any complications.
-- little helper function function file_exists(path) local attr = lighty.stat(path) if (attr) then return true else return false end end function removePrefix(str, prefix) return str:sub(1,#prefix+1) == prefix..&amp;#34;/&amp;#34; and str:sub(#prefix+2) end -- prefix without the trailing slash local prefix = &amp;#39;&amp;#39; -- the magic if (not file_exists(lighty.</description>
    </item>
    
    <item>
      <title>Speed up Drupal by preloading the page cache</title>
      <link>http://blog.dornea.nu/2010/09/04/speed-up-drupal-by-preloading-the-page-cache/</link>
      <pubDate>Sat, 04 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/09/04/speed-up-drupal-by-preloading-the-page-cache/</guid>
      <description>If you need some technical background, have a look here. The preload cache script I&amp;rsquo;ve been using for a couple a months:
#!/bin/bash # # Preload a web site&amp;#39;s cache # site=&amp;#34;dornea.nu&amp;#34; tmp=&amp;#34;downloads&amp;#34; log=&amp;#34;log.txt&amp;#34; echo &amp;#34;Crawling $site.&amp;#34; # Remove any prior downloaded files. rm -rf $tmp # Clear the page cache first. wget --quiet --delete-after http://$site/[insert reset cache script here].php # Crawl the site # # Crawl arguments: # --recursive Crawl the site # --domains=example.</description>
    </item>
    
    <item>
      <title>HowTo: Create new Debian domU using Xen on *BSD</title>
      <link>http://blog.dornea.nu/2010/03/22/howto-create-new-debian-domu-using-xen-on-bsd/</link>
      <pubDate>Mon, 22 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/03/22/howto-create-new-debian-domu-using-xen-on-bsd/</guid>
      <description>In this tutorial you&amp;rsquo;ll get detailed information how to setup a fully functionable Debian Lenny system using virtualization software Xen. This entry was written due to high frustration caused by unreliable/outdated articles on the Internet and uncompleted tutorials. This here should be an attempt to describe the installation process completely and provide additional information which might help you solve common problems. The domU system we&amp;rsquo;d like to setup (in our case Debian) provides a neat netboot installer which supports Xen.</description>
    </item>
    
    <item>
      <title>HowTo: Qemu networking on NetBSD</title>
      <link>http://blog.dornea.nu/2010/03/01/howto-qemu-networking-on-netbsd/</link>
      <pubDate>Mon, 01 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2010/03/01/howto-qemu-networking-on-netbsd/</guid>
      <description>In this tutorial I&amp;rsquo;d like to give you some useful examples how to configure network when using Qemu as virtualization machine. The videos in this HowTo were taken on a NetBSD-5_STABLE/amd64 machine usingÂ Qemu 0.11.1. **Attention: **On my system I&amp;rsquo;ve used a patched version of Qemu as reported here. However you can use the fd= option to specify an open socket to be used. Example:
$ qemu -cdrom [iso file] -net nic -net tap,fd=3 3&amp;lt;&amp;gt;/dev/tap0 Using this example `tap0â€³ should be created before the qemu command.</description>
    </item>
    
    <item>
      <title>NetBSD, Linux, Xen - Does it work?</title>
      <link>http://blog.dornea.nu/2009/11/14/netbsd-linux-xen-does-it-work/</link>
      <pubDate>Sat, 14 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2009/11/14/netbsd-linux-xen-does-it-work/</guid>
      <description>In this article I&amp;rsquo;d like to share my impressions I made with Xen during the last weeks. I met Xen a few months ago but due to general lack of interest I didn&amp;rsquo;t have the chance to give it a try.Para-virtualization - why bother at all? There were actually no significant reasons why I should use virtualization. But then it started with this thread, followed by this one. The really fascinating - and tough quite useful - aspect of virtualization consists of the hardware access policy which is implemented by the virtualization host.</description>
    </item>
    
    <item>
      <title>Keep your system up2date!</title>
      <link>http://blog.dornea.nu/2009/09/07/keep-your-system-up2date/</link>
      <pubDate>Mon, 07 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2009/09/07/keep-your-system-up2date/</guid>
      <description>Due to NetBSDâ€™s great packaging system, software gets updated very frequently. It is very important to have a clean and safe system running and no outdated packages on your system. They might be vulnerable to recently discovered bugs and affect your systemsâ€™s security and performance. After updating the package tree (see documentation), I usually update my whole system by running:
$ pkg_chk -su Actually there is nothing wrong about that. Yet there is one big problem, which caused me to seek for another updating mechanism.</description>
    </item>
    
    <item>
      <title>HowTo: RsynCrypto - The backup jewel</title>
      <link>http://blog.dornea.nu/2009/06/25/howto-rsyncrypto-the-backup-jewel/</link>
      <pubDate>Thu, 25 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2009/06/25/howto-rsyncrypto-the-backup-jewel/</guid>
      <description>Nowadays it is essential to backup your data and keep it safe in case of a data loss event. The most common way to backup (private) data is to use a remote server where you can upload your data. Certainly you want to keep it safe and private So how do you want to guarantee the privacy of the files stored? Upload it to the server and encrypt it afterwards?! Somehow you want to automate this backup process so you don&amp;rsquo;t have to do nothing than running the backup script.</description>
    </item>
    
    <item>
      <title>HowTo: Get SETOF from Array in PostgreSQL</title>
      <link>http://blog.dornea.nu/2009/03/30/howto-get-setof-from-array-in-postgresql/</link>
      <pubDate>Mon, 30 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>http://blog.dornea.nu/2009/03/30/howto-get-setof-from-array-in-postgresql/</guid>
      <description>The use of so called &amp;ldquo;procedural languages&amp;rdquo; in PostgreSQL allows the user to write user-defined functions in other languages than SQL or C. Since every query is sent to the server, the database server has to know how to interpret and handle function statements. As the PostgreSQL documentation describes, the function handler itself is a C language function compiled into a shared object and loaded on demand. All you have to do is to install the language into your database.</description>
    </item>
    
  </channel>
</rss>
